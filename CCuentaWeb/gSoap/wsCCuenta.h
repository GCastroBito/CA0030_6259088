/* wsCCuenta.h
   Generated by wsdl2h 2.8.12 from ccuenta.wsdl and typemap.dat
   2019-12-18 22:37:59 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2012 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on wsCCuenta.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Use wsdl2h option -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   urn:ccuenta/ccuenta.wsdl                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "urn:ccuenta/ccuenta.wsdl"
ns2 = "urn:ccuenta"

*/

#define SOAP_NAMESPACE_OF_ns2	"urn:ccuenta"
//gsoap ns2   schema namespace:	urn:ccuenta
//gsoap ns2   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns1	"urn:ccuenta/ccuenta.wsdl"
//gsoap ns1   schema namespace:	urn:ccuenta/ccuenta.wsdl
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns2__DatoXml.
class ns2__DatoXml;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:ccuenta                                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:ccuenta/ccuenta.wsdl                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:ccuenta                                                              *
 *                                                                            *
\******************************************************************************/


/// "urn:ccuenta":DatoXml is a complexType.
/// class ns2__DatoXml operations:
/// - soap_new_ns2__DatoXml(soap*) allocate
/// - soap_new_ns2__DatoXml(soap*, int num) allocate array
/// - soap_new_req_ns2__DatoXml(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__DatoXml(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__DatoXml(soap*, ns2__DatoXml*) deserialize from a stream
/// - int soap_write_ns2__DatoXml(soap, ns2__DatoXml*) serialize to a stream
class ns2__DatoXml
{ public:
/// Element Respuesta of type xs:string.
    char*                                Respuesta                      0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:ccuenta/ccuenta.wsdl                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:ccuenta                                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:ccuenta                                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:ccuenta/ccuenta.wsdl                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:ccuenta/ccuenta.wsdl                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns2  service name:	ccuenta 
//gsoap ns2  service type:	ccuentaPortType 
//gsoap ns2  service port:	http://10.44.64.190:20534/ 
//gsoap ns2  service namespace:	urn:ccuenta 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage ccuenta Definitions

@section ccuenta_bindings Service Bindings

  - @ref ccuenta

@section ccuenta_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page ccuenta Binding "ccuenta"

@section ccuenta_service Service Documentation "ccuenta"
Servicio web para CCuenta

@section ccuenta_operations Operations of Binding  "ccuenta"

  - @ref ns2__leerClienteCoppel

  - @ref ns2__leerDatosCliente

  - @ref ns2__leerDomicilioCliente

  - @ref ns2__leerCuentasCliente

  - @ref ns2__leerCuentaCliente

  - @ref ns2__leerImportesTotalesCliente

  - @ref ns2__leerImporteCandidatosPrestamos

  - @ref ns2__leerMargenCredito

  - @ref ns2__leerConvenios

  - @ref ns2__leerCantidadCuentasActivas

  - @ref ns2__leerCuentaCliente01

  - @ref ns2__leerCuentasCliente01

  - @ref ns2__leerImportesTotalesCliente01

  - @ref ns2__leerConvenios01

  - @ref ns2__leerCandidatosAumentoLRC

  - @ref ns2__leerMargenCredito01

  - @ref ns2__simularReestructuracion

  - @ref ns2__leerBonificacionPrestamos

@section ccuenta_ports Endpoints of Binding  "ccuenta"

  - http://10.44.64.190:20534/

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ccuenta                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerClienteCoppel                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerClienteCoppelResponse" of operation "ns2__leerClienteCoppel"
struct ns2__leerClienteCoppelResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerClienteCoppel" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerClienteCoppel

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerClienteCoppel"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerClienteCoppelResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerClienteCoppel(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerClienteCoppelResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerClienteCoppel(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerClienteCoppelResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerClienteCoppel SOAP
//gsoap ns2  service method-style:	leerClienteCoppel rpc
//gsoap ns2  service method-encoding:	leerClienteCoppel http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerClienteCoppel ""
//gsoap ns2  service method-output-action:	leerClienteCoppel urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerClienteCoppelResponse
int ns2__leerClienteCoppel(
    int                                 numerocliente,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerClienteCoppelResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerDatosCliente                                                    *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerDatosClienteResponse" of operation "ns2__leerDatosCliente"
struct ns2__leerDatosClienteResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerDatosCliente" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerDatosCliente

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerDatosCliente"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerDatosClienteResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerDatosCliente(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               tipoconsulta,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerDatosClienteResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerDatosCliente(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               tipoconsulta,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerDatosClienteResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerDatosCliente SOAP
//gsoap ns2  service method-style:	leerDatosCliente rpc
//gsoap ns2  service method-encoding:	leerDatosCliente http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerDatosCliente ""
//gsoap ns2  service method-output-action:	leerDatosCliente urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerDatosClienteResponse
int ns2__leerDatosCliente(
    int                                 numerocliente,	///< Input parameter
    char*                               tipoconsulta,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerDatosClienteResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerDomicilioCliente                                                *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerDomicilioClienteResponse" of operation "ns2__leerDomicilioCliente"
struct ns2__leerDomicilioClienteResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerDomicilioCliente" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerDomicilioCliente

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerDomicilioCliente"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerDomicilioClienteResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerDomicilioCliente(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerDomicilioClienteResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerDomicilioCliente(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerDomicilioClienteResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerDomicilioCliente SOAP
//gsoap ns2  service method-style:	leerDomicilioCliente rpc
//gsoap ns2  service method-encoding:	leerDomicilioCliente http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerDomicilioCliente ""
//gsoap ns2  service method-output-action:	leerDomicilioCliente urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerDomicilioClienteResponse
int ns2__leerDomicilioCliente(
    int                                 numerocliente,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerDomicilioClienteResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerCuentasCliente                                                  *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerCuentasClienteResponse" of operation "ns2__leerCuentasCliente"
struct ns2__leerCuentasClienteResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerCuentasCliente" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerCuentasCliente

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentasCliente"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentasClienteResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerCuentasCliente(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCuentasClienteResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerCuentasCliente(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCuentasClienteResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerCuentasCliente SOAP
//gsoap ns2  service method-style:	leerCuentasCliente rpc
//gsoap ns2  service method-encoding:	leerCuentasCliente http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerCuentasCliente ""
//gsoap ns2  service method-output-action:	leerCuentasCliente urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentasClienteResponse
int ns2__leerCuentasCliente(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerCuentasClienteResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerCuentaCliente                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerCuentaClienteResponse" of operation "ns2__leerCuentaCliente"
struct ns2__leerCuentaClienteResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerCuentaCliente" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerCuentaCliente

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentaCliente"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentaClienteResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerCuentaCliente(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               tipoconsulta,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCuentaClienteResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerCuentaCliente(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               tipoconsulta,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCuentaClienteResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerCuentaCliente SOAP
//gsoap ns2  service method-style:	leerCuentaCliente rpc
//gsoap ns2  service method-encoding:	leerCuentaCliente http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerCuentaCliente ""
//gsoap ns2  service method-output-action:	leerCuentaCliente urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentaClienteResponse
int ns2__leerCuentaCliente(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               tipoconsulta,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerCuentaClienteResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerImportesTotalesCliente                                          *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerImportesTotalesClienteResponse" of operation "ns2__leerImportesTotalesCliente"
struct ns2__leerImportesTotalesClienteResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerImportesTotalesCliente" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerImportesTotalesCliente

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerImportesTotalesCliente"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerImportesTotalesClienteResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerImportesTotalesCliente(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerImportesTotalesClienteResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerImportesTotalesCliente(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerImportesTotalesClienteResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerImportesTotalesCliente SOAP
//gsoap ns2  service method-style:	leerImportesTotalesCliente rpc
//gsoap ns2  service method-encoding:	leerImportesTotalesCliente http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerImportesTotalesCliente ""
//gsoap ns2  service method-output-action:	leerImportesTotalesCliente urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerImportesTotalesClienteResponse
int ns2__leerImportesTotalesCliente(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerImportesTotalesClienteResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerImporteCandidatosPrestamos                                      *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerImporteCandidatosPrestamosResponse" of operation "ns2__leerImporteCandidatosPrestamos"
struct ns2__leerImporteCandidatosPrestamosResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerImporteCandidatosPrestamos" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerImporteCandidatosPrestamos

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerImporteCandidatosPrestamos"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerImporteCandidatosPrestamosResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerImporteCandidatosPrestamos(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    int                                 Tienda,
    int                                 ciudad,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerImporteCandidatosPrestamosResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerImporteCandidatosPrestamos(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    int                                 Tienda,
    int                                 ciudad,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerImporteCandidatosPrestamosResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerImporteCandidatosPrestamos SOAP
//gsoap ns2  service method-style:	leerImporteCandidatosPrestamos rpc
//gsoap ns2  service method-encoding:	leerImporteCandidatosPrestamos http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerImporteCandidatosPrestamos ""
//gsoap ns2  service method-output-action:	leerImporteCandidatosPrestamos urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerImporteCandidatosPrestamosResponse
int ns2__leerImporteCandidatosPrestamos(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    int                                 Tienda,	///< Input parameter
    int                                 ciudad,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerImporteCandidatosPrestamosResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerMargenCredito                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerMargenCreditoResponse" of operation "ns2__leerMargenCredito"
struct ns2__leerMargenCreditoResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerMargenCredito" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerMargenCredito

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerMargenCredito"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerMargenCreditoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerMargenCredito(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    int                                 Tienda,
    int                                 ciudad,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerMargenCreditoResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerMargenCredito(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    int                                 Tienda,
    int                                 ciudad,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerMargenCreditoResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerMargenCredito SOAP
//gsoap ns2  service method-style:	leerMargenCredito rpc
//gsoap ns2  service method-encoding:	leerMargenCredito http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerMargenCredito ""
//gsoap ns2  service method-output-action:	leerMargenCredito urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerMargenCreditoResponse
int ns2__leerMargenCredito(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    int                                 Tienda,	///< Input parameter
    int                                 ciudad,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerMargenCreditoResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerConvenios                                                       *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerConveniosResponse" of operation "ns2__leerConvenios"
struct ns2__leerConveniosResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerConvenios" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerConvenios

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerConvenios"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerConveniosResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerConvenios(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerConveniosResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerConvenios(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerConveniosResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerConvenios SOAP
//gsoap ns2  service method-style:	leerConvenios rpc
//gsoap ns2  service method-encoding:	leerConvenios http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerConvenios ""
//gsoap ns2  service method-output-action:	leerConvenios urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerConveniosResponse
int ns2__leerConvenios(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerConveniosResponse  &	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerCantidadCuentasActivas                                          *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerCantidadCuentasActivasResponse" of operation "ns2__leerCantidadCuentasActivas"
struct ns2__leerCantidadCuentasActivasResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerCantidadCuentasActivas" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerCantidadCuentasActivas

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCantidadCuentasActivas"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCantidadCuentasActivasResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerCantidadCuentasActivas(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCantidadCuentasActivasResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerCantidadCuentasActivas(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCantidadCuentasActivasResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerCantidadCuentasActivas SOAP
//gsoap ns2  service method-style:	leerCantidadCuentasActivas rpc
//gsoap ns2  service method-encoding:	leerCantidadCuentasActivas http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerCantidadCuentasActivas ""
//gsoap ns2  service method-output-action:	leerCantidadCuentasActivas urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCantidadCuentasActivasResponse
int ns2__leerCantidadCuentasActivas(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerCantidadCuentasActivasResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerCuentaCliente01                                                 *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerCuentaCliente01Response" of operation "ns2__leerCuentaCliente01"
struct ns2__leerCuentaCliente01Response
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerCuentaCliente01" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerCuentaCliente01

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentaCliente01"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentaCliente01Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerCuentaCliente01(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               tipoconsulta,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCuentaCliente01Response&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerCuentaCliente01(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               tipoconsulta,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCuentaCliente01Response&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerCuentaCliente01 SOAP
//gsoap ns2  service method-style:	leerCuentaCliente01 rpc
//gsoap ns2  service method-encoding:	leerCuentaCliente01 http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerCuentaCliente01 ""
//gsoap ns2  service method-output-action:	leerCuentaCliente01 urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentaCliente01Response
int ns2__leerCuentaCliente01(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               tipoconsulta,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerCuentaCliente01Response&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerCuentasCliente01                                                *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerCuentasCliente01Response" of operation "ns2__leerCuentasCliente01"
struct ns2__leerCuentasCliente01Response
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerCuentasCliente01" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerCuentasCliente01

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentasCliente01"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentasCliente01Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerCuentasCliente01(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCuentasCliente01Response&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerCuentasCliente01(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCuentasCliente01Response&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerCuentasCliente01 SOAP
//gsoap ns2  service method-style:	leerCuentasCliente01 rpc
//gsoap ns2  service method-encoding:	leerCuentasCliente01 http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerCuentasCliente01 ""
//gsoap ns2  service method-output-action:	leerCuentasCliente01 urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCuentasCliente01Response
int ns2__leerCuentasCliente01(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerCuentasCliente01Response&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerImportesTotalesCliente01                                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerImportesTotalesCliente01Response" of operation "ns2__leerImportesTotalesCliente01"
struct ns2__leerImportesTotalesCliente01Response
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerImportesTotalesCliente01" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerImportesTotalesCliente01

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerImportesTotalesCliente01"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerImportesTotalesCliente01Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerImportesTotalesCliente01(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerImportesTotalesCliente01Response&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerImportesTotalesCliente01(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerImportesTotalesCliente01Response&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerImportesTotalesCliente01 SOAP
//gsoap ns2  service method-style:	leerImportesTotalesCliente01 rpc
//gsoap ns2  service method-encoding:	leerImportesTotalesCliente01 http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerImportesTotalesCliente01 ""
//gsoap ns2  service method-output-action:	leerImportesTotalesCliente01 urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerImportesTotalesCliente01Response
int ns2__leerImportesTotalesCliente01(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerImportesTotalesCliente01Response&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerConvenios01                                                     *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerConvenios01Response" of operation "ns2__leerConvenios01"
struct ns2__leerConvenios01Response
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerConvenios01" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerConvenios01

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerConvenios01"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerConvenios01Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerConvenios01(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerConvenios01Response&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerConvenios01(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerConvenios01Response&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerConvenios01 SOAP
//gsoap ns2  service method-style:	leerConvenios01 rpc
//gsoap ns2  service method-encoding:	leerConvenios01 http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerConvenios01 ""
//gsoap ns2  service method-output-action:	leerConvenios01 urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerConvenios01Response
int ns2__leerConvenios01(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerConvenios01Response&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerCandidatosAumentoLRC                                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerCandidatosAumentoLRCResponse" of operation "ns2__leerCandidatosAumentoLRC"
struct ns2__leerCandidatosAumentoLRCResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerCandidatosAumentoLRC" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerCandidatosAumentoLRC

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCandidatosAumentoLRC"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCandidatosAumentoLRCResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerCandidatosAumentoLRC(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    int                                 Tienda,
    int                                 ciudad,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCandidatosAumentoLRCResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerCandidatosAumentoLRC(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    int                                 Tienda,
    int                                 ciudad,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerCandidatosAumentoLRCResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerCandidatosAumentoLRC SOAP
//gsoap ns2  service method-style:	leerCandidatosAumentoLRC rpc
//gsoap ns2  service method-encoding:	leerCandidatosAumentoLRC http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerCandidatosAumentoLRC ""
//gsoap ns2  service method-output-action:	leerCandidatosAumentoLRC urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerCandidatosAumentoLRCResponse
int ns2__leerCandidatosAumentoLRC(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    int                                 Tienda,	///< Input parameter
    int                                 ciudad,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerCandidatosAumentoLRCResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerMargenCredito01                                                 *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerMargenCredito01Response" of operation "ns2__leerMargenCredito01"
struct ns2__leerMargenCredito01Response
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerMargenCredito01" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerMargenCredito01

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerMargenCredito01"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerMargenCredito01Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerMargenCredito01(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    int                                 Tienda,
    int                                 ciudad,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerMargenCredito01Response&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerMargenCredito01(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    int                                 Tienda,
    int                                 ciudad,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerMargenCredito01Response&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerMargenCredito01 SOAP
//gsoap ns2  service method-style:	leerMargenCredito01 rpc
//gsoap ns2  service method-encoding:	leerMargenCredito01 http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerMargenCredito01 ""
//gsoap ns2  service method-output-action:	leerMargenCredito01 urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerMargenCredito01Response
int ns2__leerMargenCredito01(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    int                                 Tienda,	///< Input parameter
    int                                 ciudad,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerMargenCredito01Response&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__simularReestructuracion                                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__simularReestructuracionResponse" of operation "ns2__simularReestructuracion"
struct ns2__simularReestructuracionResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__simularReestructuracion" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__simularReestructuracion

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/simularReestructuracion"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/simularReestructuracionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__simularReestructuracion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__simularReestructuracionResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__simularReestructuracion(
    struct soap *soap,
    // input parameters:
    int                                 numerocliente,
    char*                               Fecha,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__simularReestructuracionResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	simularReestructuracion SOAP
//gsoap ns2  service method-style:	simularReestructuracion rpc
//gsoap ns2  service method-encoding:	simularReestructuracion http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	simularReestructuracion ""
//gsoap ns2  service method-output-action:	simularReestructuracion urn:ccuenta/ccuenta.wsdl/ccuentaPortType/simularReestructuracionResponse
int ns2__simularReestructuracion(
    int                                 numerocliente,	///< Input parameter
    char*                               Fecha,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__simularReestructuracionResponse&	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__leerBonificacionPrestamos                                           *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__leerBonificacionPrestamosResponse" of operation "ns2__leerBonificacionPrestamos"
struct ns2__leerBonificacionPrestamosResponse
{
    ns2__DatoXml*                       datos;
};

/// Operation "ns2__leerBonificacionPrestamos" of service binding "ccuenta"

/**

Operation details:
Service definition of function ns1__leerBonificacionPrestamos

  - http://schemas.xmlsoap.org/soap/encoding/ RPC encodingStyle="SOAP"

  - Addressing input action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerBonificacionPrestamos"

  - Addressing input output action: "urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerBonificacionPrestamosResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__leerBonificacionPrestamos(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               cDias,
    char*                               cInteresprestamo,
    char*                               cIplazo,
    char*                               cFechaPrestamo,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerBonificacionPrestamosResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__leerBonificacionPrestamos(
    struct soap *soap,
    // input parameters:
    char*                               cDias,
    char*                               cInteresprestamo,
    char*                               cIplazo,
    char*                               cFechaPrestamo,
    char*                               cIpCartera,
    // output parameters:
    struct ns2__leerBonificacionPrestamosResponse&
  );
@endcode

C++ proxy class (defined in soapccuentaProxy.h):
@code
  class ccuentaProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapccuentaService.h):
@code
  class ccuentaService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-protocol:	leerBonificacionPrestamos SOAP
//gsoap ns2  service method-style:	leerBonificacionPrestamos rpc
//gsoap ns2  service method-encoding:	leerBonificacionPrestamos http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	leerBonificacionPrestamos ""
//gsoap ns2  service method-output-action:	leerBonificacionPrestamos urn:ccuenta/ccuenta.wsdl/ccuentaPortType/leerBonificacionPrestamosResponse
int ns2__leerBonificacionPrestamos(
    char*                               cDias,	///< Input parameter
    char*                               cInteresprestamo,	///< Input parameter
    char*                               cIplazo,	///< Input parameter
    char*                               cFechaPrestamo,	///< Input parameter
    char*                               cIpCartera,	///< Input parameter
    struct ns2__leerBonificacionPrestamosResponse&	///< Output response struct parameter
);

/**

@page ccuenta Binding "ccuenta"

@section ccuenta_policy_enablers Policy Enablers of Binding  "ccuenta"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns2 Top-level root elements of schema "urn:ccuenta"

@section ns1 Top-level root elements of schema "urn:ccuenta/ccuenta.wsdl"

*/

/* End of wsCCuenta.h */
