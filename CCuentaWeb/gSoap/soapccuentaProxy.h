/* soapccuentaProxy.h
   Generated by gSOAP 2.8.0 from wsCCuenta.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapccuentaProxy_H
#define soapccuentaProxy_H
#include "soapH.h"

class SOAP_CMAC ccuentaProxy : public soap
{ public:
	/// Endpoint URL of service 'ccuentaProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	ccuentaProxy(const char *cIPWebService, int iPuerto, short iTimeOut = 0);
	/// Constructor with copy of another engine state
	ccuentaProxy(const struct soap&);
	/// Constructor with engine input+output mode control
	ccuentaProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	ccuentaProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~ccuentaProxy();
	/// Initializer used by constructors
	virtual	void ccuentaProxy_init(soap_mode imode, soap_mode omode, const char *cIPWebService = "10.44.64.190", int iPuerto = 20534, short iTimeOut = 0);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'leerClienteCoppel' (returns error code or SOAP_OK)
	virtual	int leerClienteCoppel(int numerocliente, char *cIpCartera, struct ns2__leerClienteCoppelResponse &_param_1);

	/// Web service operation 'leerDatosCliente' (returns error code or SOAP_OK)
	virtual	int leerDatosCliente(int numerocliente, char *tipoconsulta, char *cIpCartera, struct ns2__leerDatosClienteResponse &_param_2);

	/// Web service operation 'leerDomicilioCliente' (returns error code or SOAP_OK)
	virtual	int leerDomicilioCliente(int numerocliente, char *cIpCartera, struct ns2__leerDomicilioClienteResponse &_param_3);

	/// Web service operation 'leerCuentasCliente' (returns error code or SOAP_OK)
	virtual	int leerCuentasCliente(int numerocliente, char *Fecha, char *cIpCartera, struct ns2__leerCuentasClienteResponse &_param_4);

	/// Web service operation 'leerCuentaCliente' (returns error code or SOAP_OK)
	virtual	int leerCuentaCliente(int numerocliente, char *Fecha, char *tipoconsulta, char *cIpCartera, struct ns2__leerCuentaClienteResponse &_param_5);

	/// Web service operation 'leerImportesTotalesCliente' (returns error code or SOAP_OK)
	virtual	int leerImportesTotalesCliente(int numerocliente, char *Fecha, char *cIpCartera, struct ns2__leerImportesTotalesClienteResponse &_param_6);

	/// Web service operation 'leerImporteCandidatosPrestamos' (returns error code or SOAP_OK)
	virtual	int leerImporteCandidatosPrestamos(int numerocliente, char *Fecha, int Tienda, int ciudad, char *cIpCartera, struct ns2__leerImporteCandidatosPrestamosResponse &_param_7);

	/// Web service operation 'leerMargenCredito' (returns error code or SOAP_OK)
	virtual	int leerMargenCredito(int numerocliente, char *Fecha, int Tienda, int ciudad, char *cIpCartera, struct ns2__leerMargenCreditoResponse &_param_8);

	/// Web service operation 'leerConvenios' (returns error code or SOAP_OK)
	virtual	int leerConvenios(int numerocliente, char *Fecha, char *cIpCartera, struct ns2__leerConveniosResponse &_param_9);

	/// Web service operation 'leerCantidadCuentasActivas' (returns error code or SOAP_OK)
	virtual	int leerCantidadCuentasActivas(int numerocliente, char *Fecha, char *cIpCartera, struct ns2__leerCantidadCuentasActivasResponse &_param_10);

	/// Web service operation 'leerCuentaCliente01' (returns error code or SOAP_OK)
	virtual	int leerCuentaCliente01(int numerocliente, char *Fecha, char *tipoconsulta, char *cIpCartera, struct ns2__leerCuentaCliente01Response &_param_11);

	/// Web service operation 'leerCuentasCliente01' (returns error code or SOAP_OK)
	virtual	int leerCuentasCliente01(int numerocliente, char *Fecha, char *cIpCartera, struct ns2__leerCuentasCliente01Response &_param_12);

	/// Web service operation 'leerImportesTotalesCliente01' (returns error code or SOAP_OK)
	virtual	int leerImportesTotalesCliente01(int numerocliente, char *Fecha, char *cIpCartera, struct ns2__leerImportesTotalesCliente01Response &_param_13);

	/// Web service operation 'leerConvenios01' (returns error code or SOAP_OK)
	virtual	int leerConvenios01(int numerocliente, char *Fecha, char *cIpCartera, struct ns2__leerConvenios01Response &_param_14);
	
	
	/// Web service operation 'leerCandidatosAumentoLRC' (returns error code or SOAP_OK)
	virtual	int leerCandidatosAumentoLRC(int numerocliente, char *Fecha, int Tienda, int ciudad, char *cIpCartera, struct ns2__leerCandidatosAumentoLRCResponse &_param_15);

	/// Web service operation 'leerMargenCredito01' (returns error code or SOAP_OK)
	virtual	int leerMargenCredito01(int numerocliente, char *Fecha, int Tienda, int ciudad, char *cIpCartera, struct ns2__leerMargenCredito01Response &_param_16);

	/// Web service operation 'simularReestructuracion' (returns error code or SOAP_OK)
	virtual	int simularReestructuracion(int numerocliente, char *Fecha, char *cIpCartera, struct ns2__simularReestructuracionResponse &_param_17);
	
	/// Web service operation 'leerBonificacionPrestamos' (returns error code or SOAP_OK)
	virtual	int leerBonificacionPrestamos(char *cDias, char *cInteresprestamo, char *cIplazo, char *cFechaPrestamo, char *cIpCartera, struct ns2__leerBonificacionPrestamosResponse &_param_18);
	
	void soapError( void );
	const char *obtenerError( void );

	char cUrlEndPoint[128], cBufferError[2048], cSoapAction[128];
};
#endif
