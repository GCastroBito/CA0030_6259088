/* soapH.h
   Generated by gSOAP 2.8.12 from wsCCuenta.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#ifndef SOAP_TYPE_ns2__DatoXml
#define SOAP_TYPE_ns2__DatoXml (7)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__DatoXml(struct soap*, const char*, int, const ns2__DatoXml *, const char*);
SOAP_FMAC3 ns2__DatoXml * SOAP_FMAC4 soap_in_ns2__DatoXml(struct soap*, const char*, ns2__DatoXml *, const char*);

#ifndef soap_write_ns2__DatoXml
#define soap_write_ns2__DatoXml(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:DatoXml", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 ns2__DatoXml * SOAP_FMAC4 soap_get_ns2__DatoXml(struct soap*, ns2__DatoXml *, const char*, const char*);

#ifndef soap_read_ns2__DatoXml
#define soap_read_ns2__DatoXml(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__DatoXml(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 ns2__DatoXml * SOAP_FMAC2 soap_instantiate_ns2__DatoXml(struct soap*, int, const char*, const char*, size_t*);

inline ns2__DatoXml * soap_new_ns2__DatoXml(struct soap *soap, int n = -1) { return soap_instantiate_ns2__DatoXml(soap, n, NULL, NULL, NULL); }

inline ns2__DatoXml * soap_new_req_ns2__DatoXml(struct soap *soap) { ns2__DatoXml *_p = soap_instantiate_ns2__DatoXml(soap, -1, NULL, NULL, NULL); return _p; }

inline ns2__DatoXml * soap_new_set_ns2__DatoXml(struct soap *soap, char *Respuesta) { ns2__DatoXml *_p = soap_instantiate_ns2__DatoXml(soap, -1, NULL, NULL, NULL); _p->ns2__DatoXml::Respuesta = Respuesta; return _p; }

inline void soap_delete_ns2__DatoXml(struct soap *soap, ns2__DatoXml *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__DatoXml(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); _p->SOAP_ENV__Text = SOAP_ENV__Text; return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); _p->__type = __type; _p->fault = fault; return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); _p->__any = __any; _p->__type = __type; _p->fault = fault; return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns2__leerBonificacionPrestamos
#define SOAP_TYPE_ns2__leerBonificacionPrestamos (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerBonificacionPrestamos(struct soap*, struct ns2__leerBonificacionPrestamos *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerBonificacionPrestamos(struct soap*, const struct ns2__leerBonificacionPrestamos *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerBonificacionPrestamos(struct soap*, const char*, int, const struct ns2__leerBonificacionPrestamos *, const char*);
SOAP_FMAC3 struct ns2__leerBonificacionPrestamos * SOAP_FMAC4 soap_in_ns2__leerBonificacionPrestamos(struct soap*, const char*, struct ns2__leerBonificacionPrestamos *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerBonificacionPrestamos(struct soap*, const struct ns2__leerBonificacionPrestamos *, const char*, const char*);

#ifndef soap_write_ns2__leerBonificacionPrestamos
#define soap_write_ns2__leerBonificacionPrestamos(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerBonificacionPrestamos(soap, data, "ns2:leerBonificacionPrestamos", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerBonificacionPrestamos * SOAP_FMAC4 soap_get_ns2__leerBonificacionPrestamos(struct soap*, struct ns2__leerBonificacionPrestamos *, const char*, const char*);

#ifndef soap_read_ns2__leerBonificacionPrestamos
#define soap_read_ns2__leerBonificacionPrestamos(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerBonificacionPrestamos(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerBonificacionPrestamos * SOAP_FMAC2 soap_instantiate_ns2__leerBonificacionPrestamos(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerBonificacionPrestamos * soap_new_ns2__leerBonificacionPrestamos(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerBonificacionPrestamos(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerBonificacionPrestamos * soap_new_req_ns2__leerBonificacionPrestamos(struct soap *soap) { struct ns2__leerBonificacionPrestamos *_p = soap_instantiate_ns2__leerBonificacionPrestamos(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerBonificacionPrestamos * soap_new_set_ns2__leerBonificacionPrestamos(struct soap *soap, char *cDias, char *cInteresprestamo, char *cIplazo, char *cFechaPrestamo, char *cIpCartera) { struct ns2__leerBonificacionPrestamos *_p = soap_instantiate_ns2__leerBonificacionPrestamos(soap, -1, NULL, NULL, NULL); _p->cDias = cDias; _p->cInteresprestamo = cInteresprestamo; _p->cIplazo = cIplazo; _p->cFechaPrestamo = cFechaPrestamo; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerBonificacionPrestamos(struct soap *soap, struct ns2__leerBonificacionPrestamos *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerBonificacionPrestamos(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerBonificacionPrestamosResponse
#define SOAP_TYPE_ns2__leerBonificacionPrestamosResponse (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerBonificacionPrestamosResponse(struct soap*, struct ns2__leerBonificacionPrestamosResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerBonificacionPrestamosResponse(struct soap*, const struct ns2__leerBonificacionPrestamosResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerBonificacionPrestamosResponse(struct soap*, const char*, int, const struct ns2__leerBonificacionPrestamosResponse *, const char*);
SOAP_FMAC3 struct ns2__leerBonificacionPrestamosResponse * SOAP_FMAC4 soap_in_ns2__leerBonificacionPrestamosResponse(struct soap*, const char*, struct ns2__leerBonificacionPrestamosResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerBonificacionPrestamosResponse(struct soap*, const struct ns2__leerBonificacionPrestamosResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerBonificacionPrestamosResponse
#define soap_write_ns2__leerBonificacionPrestamosResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerBonificacionPrestamosResponse(soap, data, "ns2:leerBonificacionPrestamosResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerBonificacionPrestamosResponse * SOAP_FMAC4 soap_get_ns2__leerBonificacionPrestamosResponse(struct soap*, struct ns2__leerBonificacionPrestamosResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerBonificacionPrestamosResponse
#define soap_read_ns2__leerBonificacionPrestamosResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerBonificacionPrestamosResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerBonificacionPrestamosResponse * SOAP_FMAC2 soap_instantiate_ns2__leerBonificacionPrestamosResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerBonificacionPrestamosResponse * soap_new_ns2__leerBonificacionPrestamosResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerBonificacionPrestamosResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerBonificacionPrestamosResponse * soap_new_req_ns2__leerBonificacionPrestamosResponse(struct soap *soap) { struct ns2__leerBonificacionPrestamosResponse *_p = soap_instantiate_ns2__leerBonificacionPrestamosResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerBonificacionPrestamosResponse * soap_new_set_ns2__leerBonificacionPrestamosResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerBonificacionPrestamosResponse *_p = soap_instantiate_ns2__leerBonificacionPrestamosResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerBonificacionPrestamosResponse(struct soap *soap, struct ns2__leerBonificacionPrestamosResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerBonificacionPrestamosResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__simularReestructuracion
#define SOAP_TYPE_ns2__simularReestructuracion (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__simularReestructuracion(struct soap*, struct ns2__simularReestructuracion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__simularReestructuracion(struct soap*, const struct ns2__simularReestructuracion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__simularReestructuracion(struct soap*, const char*, int, const struct ns2__simularReestructuracion *, const char*);
SOAP_FMAC3 struct ns2__simularReestructuracion * SOAP_FMAC4 soap_in_ns2__simularReestructuracion(struct soap*, const char*, struct ns2__simularReestructuracion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__simularReestructuracion(struct soap*, const struct ns2__simularReestructuracion *, const char*, const char*);

#ifndef soap_write_ns2__simularReestructuracion
#define soap_write_ns2__simularReestructuracion(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__simularReestructuracion(soap, data, "ns2:simularReestructuracion", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__simularReestructuracion * SOAP_FMAC4 soap_get_ns2__simularReestructuracion(struct soap*, struct ns2__simularReestructuracion *, const char*, const char*);

#ifndef soap_read_ns2__simularReestructuracion
#define soap_read_ns2__simularReestructuracion(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__simularReestructuracion(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__simularReestructuracion * SOAP_FMAC2 soap_instantiate_ns2__simularReestructuracion(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__simularReestructuracion * soap_new_ns2__simularReestructuracion(struct soap *soap, int n = -1) { return soap_instantiate_ns2__simularReestructuracion(soap, n, NULL, NULL, NULL); }

inline struct ns2__simularReestructuracion * soap_new_req_ns2__simularReestructuracion(struct soap *soap, int numerocliente) { struct ns2__simularReestructuracion *_p = soap_instantiate_ns2__simularReestructuracion(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__simularReestructuracion * soap_new_set_ns2__simularReestructuracion(struct soap *soap, int numerocliente, char *Fecha, char *cIpCartera) { struct ns2__simularReestructuracion *_p = soap_instantiate_ns2__simularReestructuracion(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__simularReestructuracion(struct soap *soap, struct ns2__simularReestructuracion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__simularReestructuracion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__simularReestructuracionResponse
#define SOAP_TYPE_ns2__simularReestructuracionResponse (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__simularReestructuracionResponse(struct soap*, struct ns2__simularReestructuracionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__simularReestructuracionResponse(struct soap*, const struct ns2__simularReestructuracionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__simularReestructuracionResponse(struct soap*, const char*, int, const struct ns2__simularReestructuracionResponse *, const char*);
SOAP_FMAC3 struct ns2__simularReestructuracionResponse * SOAP_FMAC4 soap_in_ns2__simularReestructuracionResponse(struct soap*, const char*, struct ns2__simularReestructuracionResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__simularReestructuracionResponse(struct soap*, const struct ns2__simularReestructuracionResponse *, const char*, const char*);

#ifndef soap_write_ns2__simularReestructuracionResponse
#define soap_write_ns2__simularReestructuracionResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__simularReestructuracionResponse(soap, data, "ns2:simularReestructuracionResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__simularReestructuracionResponse * SOAP_FMAC4 soap_get_ns2__simularReestructuracionResponse(struct soap*, struct ns2__simularReestructuracionResponse *, const char*, const char*);

#ifndef soap_read_ns2__simularReestructuracionResponse
#define soap_read_ns2__simularReestructuracionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__simularReestructuracionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__simularReestructuracionResponse * SOAP_FMAC2 soap_instantiate_ns2__simularReestructuracionResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__simularReestructuracionResponse * soap_new_ns2__simularReestructuracionResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__simularReestructuracionResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__simularReestructuracionResponse * soap_new_req_ns2__simularReestructuracionResponse(struct soap *soap) { struct ns2__simularReestructuracionResponse *_p = soap_instantiate_ns2__simularReestructuracionResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__simularReestructuracionResponse * soap_new_set_ns2__simularReestructuracionResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__simularReestructuracionResponse *_p = soap_instantiate_ns2__simularReestructuracionResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__simularReestructuracionResponse(struct soap *soap, struct ns2__simularReestructuracionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__simularReestructuracionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerMargenCredito01
#define SOAP_TYPE_ns2__leerMargenCredito01 (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerMargenCredito01(struct soap*, struct ns2__leerMargenCredito01 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerMargenCredito01(struct soap*, const struct ns2__leerMargenCredito01 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerMargenCredito01(struct soap*, const char*, int, const struct ns2__leerMargenCredito01 *, const char*);
SOAP_FMAC3 struct ns2__leerMargenCredito01 * SOAP_FMAC4 soap_in_ns2__leerMargenCredito01(struct soap*, const char*, struct ns2__leerMargenCredito01 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerMargenCredito01(struct soap*, const struct ns2__leerMargenCredito01 *, const char*, const char*);

#ifndef soap_write_ns2__leerMargenCredito01
#define soap_write_ns2__leerMargenCredito01(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerMargenCredito01(soap, data, "ns2:leerMargenCredito01", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerMargenCredito01 * SOAP_FMAC4 soap_get_ns2__leerMargenCredito01(struct soap*, struct ns2__leerMargenCredito01 *, const char*, const char*);

#ifndef soap_read_ns2__leerMargenCredito01
#define soap_read_ns2__leerMargenCredito01(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerMargenCredito01(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerMargenCredito01 * SOAP_FMAC2 soap_instantiate_ns2__leerMargenCredito01(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerMargenCredito01 * soap_new_ns2__leerMargenCredito01(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerMargenCredito01(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerMargenCredito01 * soap_new_req_ns2__leerMargenCredito01(struct soap *soap, int numerocliente, int Tienda, int ciudad) { struct ns2__leerMargenCredito01 *_p = soap_instantiate_ns2__leerMargenCredito01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Tienda = Tienda; _p->ciudad = ciudad; return _p; }

inline struct ns2__leerMargenCredito01 * soap_new_set_ns2__leerMargenCredito01(struct soap *soap, int numerocliente, char *Fecha, int Tienda, int ciudad, char *cIpCartera) { struct ns2__leerMargenCredito01 *_p = soap_instantiate_ns2__leerMargenCredito01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->Tienda = Tienda; _p->ciudad = ciudad; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerMargenCredito01(struct soap *soap, struct ns2__leerMargenCredito01 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerMargenCredito01(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerMargenCredito01Response
#define SOAP_TYPE_ns2__leerMargenCredito01Response (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerMargenCredito01Response(struct soap*, struct ns2__leerMargenCredito01Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerMargenCredito01Response(struct soap*, const struct ns2__leerMargenCredito01Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerMargenCredito01Response(struct soap*, const char*, int, const struct ns2__leerMargenCredito01Response *, const char*);
SOAP_FMAC3 struct ns2__leerMargenCredito01Response * SOAP_FMAC4 soap_in_ns2__leerMargenCredito01Response(struct soap*, const char*, struct ns2__leerMargenCredito01Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerMargenCredito01Response(struct soap*, const struct ns2__leerMargenCredito01Response *, const char*, const char*);

#ifndef soap_write_ns2__leerMargenCredito01Response
#define soap_write_ns2__leerMargenCredito01Response(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerMargenCredito01Response(soap, data, "ns2:leerMargenCredito01Response", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerMargenCredito01Response * SOAP_FMAC4 soap_get_ns2__leerMargenCredito01Response(struct soap*, struct ns2__leerMargenCredito01Response *, const char*, const char*);

#ifndef soap_read_ns2__leerMargenCredito01Response
#define soap_read_ns2__leerMargenCredito01Response(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerMargenCredito01Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerMargenCredito01Response * SOAP_FMAC2 soap_instantiate_ns2__leerMargenCredito01Response(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerMargenCredito01Response * soap_new_ns2__leerMargenCredito01Response(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerMargenCredito01Response(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerMargenCredito01Response * soap_new_req_ns2__leerMargenCredito01Response(struct soap *soap) { struct ns2__leerMargenCredito01Response *_p = soap_instantiate_ns2__leerMargenCredito01Response(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerMargenCredito01Response * soap_new_set_ns2__leerMargenCredito01Response(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerMargenCredito01Response *_p = soap_instantiate_ns2__leerMargenCredito01Response(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerMargenCredito01Response(struct soap *soap, struct ns2__leerMargenCredito01Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerMargenCredito01Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCandidatosAumentoLRC
#define SOAP_TYPE_ns2__leerCandidatosAumentoLRC (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCandidatosAumentoLRC(struct soap*, struct ns2__leerCandidatosAumentoLRC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCandidatosAumentoLRC(struct soap*, const struct ns2__leerCandidatosAumentoLRC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCandidatosAumentoLRC(struct soap*, const char*, int, const struct ns2__leerCandidatosAumentoLRC *, const char*);
SOAP_FMAC3 struct ns2__leerCandidatosAumentoLRC * SOAP_FMAC4 soap_in_ns2__leerCandidatosAumentoLRC(struct soap*, const char*, struct ns2__leerCandidatosAumentoLRC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCandidatosAumentoLRC(struct soap*, const struct ns2__leerCandidatosAumentoLRC *, const char*, const char*);

#ifndef soap_write_ns2__leerCandidatosAumentoLRC
#define soap_write_ns2__leerCandidatosAumentoLRC(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCandidatosAumentoLRC(soap, data, "ns2:leerCandidatosAumentoLRC", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCandidatosAumentoLRC * SOAP_FMAC4 soap_get_ns2__leerCandidatosAumentoLRC(struct soap*, struct ns2__leerCandidatosAumentoLRC *, const char*, const char*);

#ifndef soap_read_ns2__leerCandidatosAumentoLRC
#define soap_read_ns2__leerCandidatosAumentoLRC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCandidatosAumentoLRC(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCandidatosAumentoLRC * SOAP_FMAC2 soap_instantiate_ns2__leerCandidatosAumentoLRC(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCandidatosAumentoLRC * soap_new_ns2__leerCandidatosAumentoLRC(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCandidatosAumentoLRC(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCandidatosAumentoLRC * soap_new_req_ns2__leerCandidatosAumentoLRC(struct soap *soap, int numerocliente, int Tienda, int ciudad) { struct ns2__leerCandidatosAumentoLRC *_p = soap_instantiate_ns2__leerCandidatosAumentoLRC(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Tienda = Tienda; _p->ciudad = ciudad; return _p; }

inline struct ns2__leerCandidatosAumentoLRC * soap_new_set_ns2__leerCandidatosAumentoLRC(struct soap *soap, int numerocliente, char *Fecha, int Tienda, int ciudad, char *cIpCartera) { struct ns2__leerCandidatosAumentoLRC *_p = soap_instantiate_ns2__leerCandidatosAumentoLRC(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->Tienda = Tienda; _p->ciudad = ciudad; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerCandidatosAumentoLRC(struct soap *soap, struct ns2__leerCandidatosAumentoLRC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCandidatosAumentoLRC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCandidatosAumentoLRCResponse
#define SOAP_TYPE_ns2__leerCandidatosAumentoLRCResponse (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCandidatosAumentoLRCResponse(struct soap*, struct ns2__leerCandidatosAumentoLRCResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCandidatosAumentoLRCResponse(struct soap*, const struct ns2__leerCandidatosAumentoLRCResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCandidatosAumentoLRCResponse(struct soap*, const char*, int, const struct ns2__leerCandidatosAumentoLRCResponse *, const char*);
SOAP_FMAC3 struct ns2__leerCandidatosAumentoLRCResponse * SOAP_FMAC4 soap_in_ns2__leerCandidatosAumentoLRCResponse(struct soap*, const char*, struct ns2__leerCandidatosAumentoLRCResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCandidatosAumentoLRCResponse(struct soap*, const struct ns2__leerCandidatosAumentoLRCResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerCandidatosAumentoLRCResponse
#define soap_write_ns2__leerCandidatosAumentoLRCResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCandidatosAumentoLRCResponse(soap, data, "ns2:leerCandidatosAumentoLRCResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCandidatosAumentoLRCResponse * SOAP_FMAC4 soap_get_ns2__leerCandidatosAumentoLRCResponse(struct soap*, struct ns2__leerCandidatosAumentoLRCResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerCandidatosAumentoLRCResponse
#define soap_read_ns2__leerCandidatosAumentoLRCResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCandidatosAumentoLRCResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCandidatosAumentoLRCResponse * SOAP_FMAC2 soap_instantiate_ns2__leerCandidatosAumentoLRCResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCandidatosAumentoLRCResponse * soap_new_ns2__leerCandidatosAumentoLRCResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCandidatosAumentoLRCResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCandidatosAumentoLRCResponse * soap_new_req_ns2__leerCandidatosAumentoLRCResponse(struct soap *soap) { struct ns2__leerCandidatosAumentoLRCResponse *_p = soap_instantiate_ns2__leerCandidatosAumentoLRCResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerCandidatosAumentoLRCResponse * soap_new_set_ns2__leerCandidatosAumentoLRCResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerCandidatosAumentoLRCResponse *_p = soap_instantiate_ns2__leerCandidatosAumentoLRCResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerCandidatosAumentoLRCResponse(struct soap *soap, struct ns2__leerCandidatosAumentoLRCResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCandidatosAumentoLRCResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerConvenios01
#define SOAP_TYPE_ns2__leerConvenios01 (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerConvenios01(struct soap*, struct ns2__leerConvenios01 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerConvenios01(struct soap*, const struct ns2__leerConvenios01 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerConvenios01(struct soap*, const char*, int, const struct ns2__leerConvenios01 *, const char*);
SOAP_FMAC3 struct ns2__leerConvenios01 * SOAP_FMAC4 soap_in_ns2__leerConvenios01(struct soap*, const char*, struct ns2__leerConvenios01 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerConvenios01(struct soap*, const struct ns2__leerConvenios01 *, const char*, const char*);

#ifndef soap_write_ns2__leerConvenios01
#define soap_write_ns2__leerConvenios01(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerConvenios01(soap, data, "ns2:leerConvenios01", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerConvenios01 * SOAP_FMAC4 soap_get_ns2__leerConvenios01(struct soap*, struct ns2__leerConvenios01 *, const char*, const char*);

#ifndef soap_read_ns2__leerConvenios01
#define soap_read_ns2__leerConvenios01(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerConvenios01(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerConvenios01 * SOAP_FMAC2 soap_instantiate_ns2__leerConvenios01(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerConvenios01 * soap_new_ns2__leerConvenios01(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerConvenios01(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerConvenios01 * soap_new_req_ns2__leerConvenios01(struct soap *soap, int numerocliente) { struct ns2__leerConvenios01 *_p = soap_instantiate_ns2__leerConvenios01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerConvenios01 * soap_new_set_ns2__leerConvenios01(struct soap *soap, int numerocliente, char *Fecha, char *cIpCartera) { struct ns2__leerConvenios01 *_p = soap_instantiate_ns2__leerConvenios01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerConvenios01(struct soap *soap, struct ns2__leerConvenios01 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerConvenios01(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerConvenios01Response
#define SOAP_TYPE_ns2__leerConvenios01Response (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerConvenios01Response(struct soap*, struct ns2__leerConvenios01Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerConvenios01Response(struct soap*, const struct ns2__leerConvenios01Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerConvenios01Response(struct soap*, const char*, int, const struct ns2__leerConvenios01Response *, const char*);
SOAP_FMAC3 struct ns2__leerConvenios01Response * SOAP_FMAC4 soap_in_ns2__leerConvenios01Response(struct soap*, const char*, struct ns2__leerConvenios01Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerConvenios01Response(struct soap*, const struct ns2__leerConvenios01Response *, const char*, const char*);

#ifndef soap_write_ns2__leerConvenios01Response
#define soap_write_ns2__leerConvenios01Response(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerConvenios01Response(soap, data, "ns2:leerConvenios01Response", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerConvenios01Response * SOAP_FMAC4 soap_get_ns2__leerConvenios01Response(struct soap*, struct ns2__leerConvenios01Response *, const char*, const char*);

#ifndef soap_read_ns2__leerConvenios01Response
#define soap_read_ns2__leerConvenios01Response(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerConvenios01Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerConvenios01Response * SOAP_FMAC2 soap_instantiate_ns2__leerConvenios01Response(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerConvenios01Response * soap_new_ns2__leerConvenios01Response(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerConvenios01Response(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerConvenios01Response * soap_new_req_ns2__leerConvenios01Response(struct soap *soap) { struct ns2__leerConvenios01Response *_p = soap_instantiate_ns2__leerConvenios01Response(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerConvenios01Response * soap_new_set_ns2__leerConvenios01Response(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerConvenios01Response *_p = soap_instantiate_ns2__leerConvenios01Response(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerConvenios01Response(struct soap *soap, struct ns2__leerConvenios01Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerConvenios01Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerImportesTotalesCliente01
#define SOAP_TYPE_ns2__leerImportesTotalesCliente01 (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerImportesTotalesCliente01(struct soap*, struct ns2__leerImportesTotalesCliente01 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerImportesTotalesCliente01(struct soap*, const struct ns2__leerImportesTotalesCliente01 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerImportesTotalesCliente01(struct soap*, const char*, int, const struct ns2__leerImportesTotalesCliente01 *, const char*);
SOAP_FMAC3 struct ns2__leerImportesTotalesCliente01 * SOAP_FMAC4 soap_in_ns2__leerImportesTotalesCliente01(struct soap*, const char*, struct ns2__leerImportesTotalesCliente01 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerImportesTotalesCliente01(struct soap*, const struct ns2__leerImportesTotalesCliente01 *, const char*, const char*);

#ifndef soap_write_ns2__leerImportesTotalesCliente01
#define soap_write_ns2__leerImportesTotalesCliente01(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerImportesTotalesCliente01(soap, data, "ns2:leerImportesTotalesCliente01", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerImportesTotalesCliente01 * SOAP_FMAC4 soap_get_ns2__leerImportesTotalesCliente01(struct soap*, struct ns2__leerImportesTotalesCliente01 *, const char*, const char*);

#ifndef soap_read_ns2__leerImportesTotalesCliente01
#define soap_read_ns2__leerImportesTotalesCliente01(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerImportesTotalesCliente01(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerImportesTotalesCliente01 * SOAP_FMAC2 soap_instantiate_ns2__leerImportesTotalesCliente01(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerImportesTotalesCliente01 * soap_new_ns2__leerImportesTotalesCliente01(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerImportesTotalesCliente01(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerImportesTotalesCliente01 * soap_new_req_ns2__leerImportesTotalesCliente01(struct soap *soap, int numerocliente) { struct ns2__leerImportesTotalesCliente01 *_p = soap_instantiate_ns2__leerImportesTotalesCliente01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerImportesTotalesCliente01 * soap_new_set_ns2__leerImportesTotalesCliente01(struct soap *soap, int numerocliente, char *Fecha, char *cIpCartera) { struct ns2__leerImportesTotalesCliente01 *_p = soap_instantiate_ns2__leerImportesTotalesCliente01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerImportesTotalesCliente01(struct soap *soap, struct ns2__leerImportesTotalesCliente01 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerImportesTotalesCliente01(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerImportesTotalesCliente01Response
#define SOAP_TYPE_ns2__leerImportesTotalesCliente01Response (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerImportesTotalesCliente01Response(struct soap*, struct ns2__leerImportesTotalesCliente01Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerImportesTotalesCliente01Response(struct soap*, const struct ns2__leerImportesTotalesCliente01Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerImportesTotalesCliente01Response(struct soap*, const char*, int, const struct ns2__leerImportesTotalesCliente01Response *, const char*);
SOAP_FMAC3 struct ns2__leerImportesTotalesCliente01Response * SOAP_FMAC4 soap_in_ns2__leerImportesTotalesCliente01Response(struct soap*, const char*, struct ns2__leerImportesTotalesCliente01Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerImportesTotalesCliente01Response(struct soap*, const struct ns2__leerImportesTotalesCliente01Response *, const char*, const char*);

#ifndef soap_write_ns2__leerImportesTotalesCliente01Response
#define soap_write_ns2__leerImportesTotalesCliente01Response(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerImportesTotalesCliente01Response(soap, data, "ns2:leerImportesTotalesCliente01Response", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerImportesTotalesCliente01Response * SOAP_FMAC4 soap_get_ns2__leerImportesTotalesCliente01Response(struct soap*, struct ns2__leerImportesTotalesCliente01Response *, const char*, const char*);

#ifndef soap_read_ns2__leerImportesTotalesCliente01Response
#define soap_read_ns2__leerImportesTotalesCliente01Response(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerImportesTotalesCliente01Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerImportesTotalesCliente01Response * SOAP_FMAC2 soap_instantiate_ns2__leerImportesTotalesCliente01Response(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerImportesTotalesCliente01Response * soap_new_ns2__leerImportesTotalesCliente01Response(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerImportesTotalesCliente01Response(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerImportesTotalesCliente01Response * soap_new_req_ns2__leerImportesTotalesCliente01Response(struct soap *soap) { struct ns2__leerImportesTotalesCliente01Response *_p = soap_instantiate_ns2__leerImportesTotalesCliente01Response(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerImportesTotalesCliente01Response * soap_new_set_ns2__leerImportesTotalesCliente01Response(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerImportesTotalesCliente01Response *_p = soap_instantiate_ns2__leerImportesTotalesCliente01Response(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerImportesTotalesCliente01Response(struct soap *soap, struct ns2__leerImportesTotalesCliente01Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerImportesTotalesCliente01Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCuentasCliente01
#define SOAP_TYPE_ns2__leerCuentasCliente01 (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCuentasCliente01(struct soap*, struct ns2__leerCuentasCliente01 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCuentasCliente01(struct soap*, const struct ns2__leerCuentasCliente01 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCuentasCliente01(struct soap*, const char*, int, const struct ns2__leerCuentasCliente01 *, const char*);
SOAP_FMAC3 struct ns2__leerCuentasCliente01 * SOAP_FMAC4 soap_in_ns2__leerCuentasCliente01(struct soap*, const char*, struct ns2__leerCuentasCliente01 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCuentasCliente01(struct soap*, const struct ns2__leerCuentasCliente01 *, const char*, const char*);

#ifndef soap_write_ns2__leerCuentasCliente01
#define soap_write_ns2__leerCuentasCliente01(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCuentasCliente01(soap, data, "ns2:leerCuentasCliente01", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCuentasCliente01 * SOAP_FMAC4 soap_get_ns2__leerCuentasCliente01(struct soap*, struct ns2__leerCuentasCliente01 *, const char*, const char*);

#ifndef soap_read_ns2__leerCuentasCliente01
#define soap_read_ns2__leerCuentasCliente01(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCuentasCliente01(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCuentasCliente01 * SOAP_FMAC2 soap_instantiate_ns2__leerCuentasCliente01(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCuentasCliente01 * soap_new_ns2__leerCuentasCliente01(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCuentasCliente01(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCuentasCliente01 * soap_new_req_ns2__leerCuentasCliente01(struct soap *soap, int numerocliente) { struct ns2__leerCuentasCliente01 *_p = soap_instantiate_ns2__leerCuentasCliente01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerCuentasCliente01 * soap_new_set_ns2__leerCuentasCliente01(struct soap *soap, int numerocliente, char *Fecha, char *cIpCartera) { struct ns2__leerCuentasCliente01 *_p = soap_instantiate_ns2__leerCuentasCliente01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerCuentasCliente01(struct soap *soap, struct ns2__leerCuentasCliente01 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCuentasCliente01(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCuentasCliente01Response
#define SOAP_TYPE_ns2__leerCuentasCliente01Response (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCuentasCliente01Response(struct soap*, struct ns2__leerCuentasCliente01Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCuentasCliente01Response(struct soap*, const struct ns2__leerCuentasCliente01Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCuentasCliente01Response(struct soap*, const char*, int, const struct ns2__leerCuentasCliente01Response *, const char*);
SOAP_FMAC3 struct ns2__leerCuentasCliente01Response * SOAP_FMAC4 soap_in_ns2__leerCuentasCliente01Response(struct soap*, const char*, struct ns2__leerCuentasCliente01Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCuentasCliente01Response(struct soap*, const struct ns2__leerCuentasCliente01Response *, const char*, const char*);

#ifndef soap_write_ns2__leerCuentasCliente01Response
#define soap_write_ns2__leerCuentasCliente01Response(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCuentasCliente01Response(soap, data, "ns2:leerCuentasCliente01Response", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCuentasCliente01Response * SOAP_FMAC4 soap_get_ns2__leerCuentasCliente01Response(struct soap*, struct ns2__leerCuentasCliente01Response *, const char*, const char*);

#ifndef soap_read_ns2__leerCuentasCliente01Response
#define soap_read_ns2__leerCuentasCliente01Response(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCuentasCliente01Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCuentasCliente01Response * SOAP_FMAC2 soap_instantiate_ns2__leerCuentasCliente01Response(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCuentasCliente01Response * soap_new_ns2__leerCuentasCliente01Response(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCuentasCliente01Response(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCuentasCliente01Response * soap_new_req_ns2__leerCuentasCliente01Response(struct soap *soap) { struct ns2__leerCuentasCliente01Response *_p = soap_instantiate_ns2__leerCuentasCliente01Response(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerCuentasCliente01Response * soap_new_set_ns2__leerCuentasCliente01Response(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerCuentasCliente01Response *_p = soap_instantiate_ns2__leerCuentasCliente01Response(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerCuentasCliente01Response(struct soap *soap, struct ns2__leerCuentasCliente01Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCuentasCliente01Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCuentaCliente01
#define SOAP_TYPE_ns2__leerCuentaCliente01 (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCuentaCliente01(struct soap*, struct ns2__leerCuentaCliente01 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCuentaCliente01(struct soap*, const struct ns2__leerCuentaCliente01 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCuentaCliente01(struct soap*, const char*, int, const struct ns2__leerCuentaCliente01 *, const char*);
SOAP_FMAC3 struct ns2__leerCuentaCliente01 * SOAP_FMAC4 soap_in_ns2__leerCuentaCliente01(struct soap*, const char*, struct ns2__leerCuentaCliente01 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCuentaCliente01(struct soap*, const struct ns2__leerCuentaCliente01 *, const char*, const char*);

#ifndef soap_write_ns2__leerCuentaCliente01
#define soap_write_ns2__leerCuentaCliente01(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCuentaCliente01(soap, data, "ns2:leerCuentaCliente01", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCuentaCliente01 * SOAP_FMAC4 soap_get_ns2__leerCuentaCliente01(struct soap*, struct ns2__leerCuentaCliente01 *, const char*, const char*);

#ifndef soap_read_ns2__leerCuentaCliente01
#define soap_read_ns2__leerCuentaCliente01(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCuentaCliente01(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCuentaCliente01 * SOAP_FMAC2 soap_instantiate_ns2__leerCuentaCliente01(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCuentaCliente01 * soap_new_ns2__leerCuentaCliente01(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCuentaCliente01(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCuentaCliente01 * soap_new_req_ns2__leerCuentaCliente01(struct soap *soap, int numerocliente) { struct ns2__leerCuentaCliente01 *_p = soap_instantiate_ns2__leerCuentaCliente01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerCuentaCliente01 * soap_new_set_ns2__leerCuentaCliente01(struct soap *soap, int numerocliente, char *Fecha, char *tipoconsulta, char *cIpCartera) { struct ns2__leerCuentaCliente01 *_p = soap_instantiate_ns2__leerCuentaCliente01(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->tipoconsulta = tipoconsulta; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerCuentaCliente01(struct soap *soap, struct ns2__leerCuentaCliente01 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCuentaCliente01(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCuentaCliente01Response
#define SOAP_TYPE_ns2__leerCuentaCliente01Response (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCuentaCliente01Response(struct soap*, struct ns2__leerCuentaCliente01Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCuentaCliente01Response(struct soap*, const struct ns2__leerCuentaCliente01Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCuentaCliente01Response(struct soap*, const char*, int, const struct ns2__leerCuentaCliente01Response *, const char*);
SOAP_FMAC3 struct ns2__leerCuentaCliente01Response * SOAP_FMAC4 soap_in_ns2__leerCuentaCliente01Response(struct soap*, const char*, struct ns2__leerCuentaCliente01Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCuentaCliente01Response(struct soap*, const struct ns2__leerCuentaCliente01Response *, const char*, const char*);

#ifndef soap_write_ns2__leerCuentaCliente01Response
#define soap_write_ns2__leerCuentaCliente01Response(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCuentaCliente01Response(soap, data, "ns2:leerCuentaCliente01Response", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCuentaCliente01Response * SOAP_FMAC4 soap_get_ns2__leerCuentaCliente01Response(struct soap*, struct ns2__leerCuentaCliente01Response *, const char*, const char*);

#ifndef soap_read_ns2__leerCuentaCliente01Response
#define soap_read_ns2__leerCuentaCliente01Response(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCuentaCliente01Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCuentaCliente01Response * SOAP_FMAC2 soap_instantiate_ns2__leerCuentaCliente01Response(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCuentaCliente01Response * soap_new_ns2__leerCuentaCliente01Response(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCuentaCliente01Response(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCuentaCliente01Response * soap_new_req_ns2__leerCuentaCliente01Response(struct soap *soap) { struct ns2__leerCuentaCliente01Response *_p = soap_instantiate_ns2__leerCuentaCliente01Response(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerCuentaCliente01Response * soap_new_set_ns2__leerCuentaCliente01Response(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerCuentaCliente01Response *_p = soap_instantiate_ns2__leerCuentaCliente01Response(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerCuentaCliente01Response(struct soap *soap, struct ns2__leerCuentaCliente01Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCuentaCliente01Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCantidadCuentasActivas
#define SOAP_TYPE_ns2__leerCantidadCuentasActivas (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCantidadCuentasActivas(struct soap*, struct ns2__leerCantidadCuentasActivas *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCantidadCuentasActivas(struct soap*, const struct ns2__leerCantidadCuentasActivas *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCantidadCuentasActivas(struct soap*, const char*, int, const struct ns2__leerCantidadCuentasActivas *, const char*);
SOAP_FMAC3 struct ns2__leerCantidadCuentasActivas * SOAP_FMAC4 soap_in_ns2__leerCantidadCuentasActivas(struct soap*, const char*, struct ns2__leerCantidadCuentasActivas *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCantidadCuentasActivas(struct soap*, const struct ns2__leerCantidadCuentasActivas *, const char*, const char*);

#ifndef soap_write_ns2__leerCantidadCuentasActivas
#define soap_write_ns2__leerCantidadCuentasActivas(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCantidadCuentasActivas(soap, data, "ns2:leerCantidadCuentasActivas", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCantidadCuentasActivas * SOAP_FMAC4 soap_get_ns2__leerCantidadCuentasActivas(struct soap*, struct ns2__leerCantidadCuentasActivas *, const char*, const char*);

#ifndef soap_read_ns2__leerCantidadCuentasActivas
#define soap_read_ns2__leerCantidadCuentasActivas(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCantidadCuentasActivas(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCantidadCuentasActivas * SOAP_FMAC2 soap_instantiate_ns2__leerCantidadCuentasActivas(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCantidadCuentasActivas * soap_new_ns2__leerCantidadCuentasActivas(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCantidadCuentasActivas(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCantidadCuentasActivas * soap_new_req_ns2__leerCantidadCuentasActivas(struct soap *soap, int numerocliente) { struct ns2__leerCantidadCuentasActivas *_p = soap_instantiate_ns2__leerCantidadCuentasActivas(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerCantidadCuentasActivas * soap_new_set_ns2__leerCantidadCuentasActivas(struct soap *soap, int numerocliente, char *Fecha, char *cIpCartera) { struct ns2__leerCantidadCuentasActivas *_p = soap_instantiate_ns2__leerCantidadCuentasActivas(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerCantidadCuentasActivas(struct soap *soap, struct ns2__leerCantidadCuentasActivas *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCantidadCuentasActivas(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCantidadCuentasActivasResponse
#define SOAP_TYPE_ns2__leerCantidadCuentasActivasResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCantidadCuentasActivasResponse(struct soap*, struct ns2__leerCantidadCuentasActivasResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCantidadCuentasActivasResponse(struct soap*, const struct ns2__leerCantidadCuentasActivasResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCantidadCuentasActivasResponse(struct soap*, const char*, int, const struct ns2__leerCantidadCuentasActivasResponse *, const char*);
SOAP_FMAC3 struct ns2__leerCantidadCuentasActivasResponse * SOAP_FMAC4 soap_in_ns2__leerCantidadCuentasActivasResponse(struct soap*, const char*, struct ns2__leerCantidadCuentasActivasResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCantidadCuentasActivasResponse(struct soap*, const struct ns2__leerCantidadCuentasActivasResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerCantidadCuentasActivasResponse
#define soap_write_ns2__leerCantidadCuentasActivasResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCantidadCuentasActivasResponse(soap, data, "ns2:leerCantidadCuentasActivasResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCantidadCuentasActivasResponse * SOAP_FMAC4 soap_get_ns2__leerCantidadCuentasActivasResponse(struct soap*, struct ns2__leerCantidadCuentasActivasResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerCantidadCuentasActivasResponse
#define soap_read_ns2__leerCantidadCuentasActivasResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCantidadCuentasActivasResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCantidadCuentasActivasResponse * SOAP_FMAC2 soap_instantiate_ns2__leerCantidadCuentasActivasResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCantidadCuentasActivasResponse * soap_new_ns2__leerCantidadCuentasActivasResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCantidadCuentasActivasResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCantidadCuentasActivasResponse * soap_new_req_ns2__leerCantidadCuentasActivasResponse(struct soap *soap) { struct ns2__leerCantidadCuentasActivasResponse *_p = soap_instantiate_ns2__leerCantidadCuentasActivasResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerCantidadCuentasActivasResponse * soap_new_set_ns2__leerCantidadCuentasActivasResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerCantidadCuentasActivasResponse *_p = soap_instantiate_ns2__leerCantidadCuentasActivasResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerCantidadCuentasActivasResponse(struct soap *soap, struct ns2__leerCantidadCuentasActivasResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCantidadCuentasActivasResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerConvenios
#define SOAP_TYPE_ns2__leerConvenios (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerConvenios(struct soap*, struct ns2__leerConvenios *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerConvenios(struct soap*, const struct ns2__leerConvenios *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerConvenios(struct soap*, const char*, int, const struct ns2__leerConvenios *, const char*);
SOAP_FMAC3 struct ns2__leerConvenios * SOAP_FMAC4 soap_in_ns2__leerConvenios(struct soap*, const char*, struct ns2__leerConvenios *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerConvenios(struct soap*, const struct ns2__leerConvenios *, const char*, const char*);

#ifndef soap_write_ns2__leerConvenios
#define soap_write_ns2__leerConvenios(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerConvenios(soap, data, "ns2:leerConvenios", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerConvenios * SOAP_FMAC4 soap_get_ns2__leerConvenios(struct soap*, struct ns2__leerConvenios *, const char*, const char*);

#ifndef soap_read_ns2__leerConvenios
#define soap_read_ns2__leerConvenios(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerConvenios(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerConvenios * SOAP_FMAC2 soap_instantiate_ns2__leerConvenios(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerConvenios * soap_new_ns2__leerConvenios(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerConvenios(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerConvenios * soap_new_req_ns2__leerConvenios(struct soap *soap, int numerocliente) { struct ns2__leerConvenios *_p = soap_instantiate_ns2__leerConvenios(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerConvenios * soap_new_set_ns2__leerConvenios(struct soap *soap, int numerocliente, char *Fecha, char *cIpCartera) { struct ns2__leerConvenios *_p = soap_instantiate_ns2__leerConvenios(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerConvenios(struct soap *soap, struct ns2__leerConvenios *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerConvenios(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerConveniosResponse
#define SOAP_TYPE_ns2__leerConveniosResponse (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerConveniosResponse(struct soap*, struct ns2__leerConveniosResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerConveniosResponse(struct soap*, const struct ns2__leerConveniosResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerConveniosResponse(struct soap*, const char*, int, const struct ns2__leerConveniosResponse *, const char*);
SOAP_FMAC3 struct ns2__leerConveniosResponse * SOAP_FMAC4 soap_in_ns2__leerConveniosResponse(struct soap*, const char*, struct ns2__leerConveniosResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerConveniosResponse(struct soap*, const struct ns2__leerConveniosResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerConveniosResponse
#define soap_write_ns2__leerConveniosResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerConveniosResponse(soap, data, "ns2:leerConveniosResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerConveniosResponse * SOAP_FMAC4 soap_get_ns2__leerConveniosResponse(struct soap*, struct ns2__leerConveniosResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerConveniosResponse
#define soap_read_ns2__leerConveniosResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerConveniosResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerConveniosResponse * SOAP_FMAC2 soap_instantiate_ns2__leerConveniosResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerConveniosResponse * soap_new_ns2__leerConveniosResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerConveniosResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerConveniosResponse * soap_new_req_ns2__leerConveniosResponse(struct soap *soap) { struct ns2__leerConveniosResponse *_p = soap_instantiate_ns2__leerConveniosResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerConveniosResponse * soap_new_set_ns2__leerConveniosResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerConveniosResponse *_p = soap_instantiate_ns2__leerConveniosResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerConveniosResponse(struct soap *soap, struct ns2__leerConveniosResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerConveniosResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerMargenCredito
#define SOAP_TYPE_ns2__leerMargenCredito (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerMargenCredito(struct soap*, struct ns2__leerMargenCredito *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerMargenCredito(struct soap*, const struct ns2__leerMargenCredito *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerMargenCredito(struct soap*, const char*, int, const struct ns2__leerMargenCredito *, const char*);
SOAP_FMAC3 struct ns2__leerMargenCredito * SOAP_FMAC4 soap_in_ns2__leerMargenCredito(struct soap*, const char*, struct ns2__leerMargenCredito *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerMargenCredito(struct soap*, const struct ns2__leerMargenCredito *, const char*, const char*);

#ifndef soap_write_ns2__leerMargenCredito
#define soap_write_ns2__leerMargenCredito(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerMargenCredito(soap, data, "ns2:leerMargenCredito", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerMargenCredito * SOAP_FMAC4 soap_get_ns2__leerMargenCredito(struct soap*, struct ns2__leerMargenCredito *, const char*, const char*);

#ifndef soap_read_ns2__leerMargenCredito
#define soap_read_ns2__leerMargenCredito(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerMargenCredito(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerMargenCredito * SOAP_FMAC2 soap_instantiate_ns2__leerMargenCredito(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerMargenCredito * soap_new_ns2__leerMargenCredito(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerMargenCredito(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerMargenCredito * soap_new_req_ns2__leerMargenCredito(struct soap *soap, int numerocliente, int Tienda, int ciudad) { struct ns2__leerMargenCredito *_p = soap_instantiate_ns2__leerMargenCredito(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Tienda = Tienda; _p->ciudad = ciudad; return _p; }

inline struct ns2__leerMargenCredito * soap_new_set_ns2__leerMargenCredito(struct soap *soap, int numerocliente, char *Fecha, int Tienda, int ciudad, char *cIpCartera) { struct ns2__leerMargenCredito *_p = soap_instantiate_ns2__leerMargenCredito(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->Tienda = Tienda; _p->ciudad = ciudad; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerMargenCredito(struct soap *soap, struct ns2__leerMargenCredito *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerMargenCredito(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerMargenCreditoResponse
#define SOAP_TYPE_ns2__leerMargenCreditoResponse (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerMargenCreditoResponse(struct soap*, struct ns2__leerMargenCreditoResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerMargenCreditoResponse(struct soap*, const struct ns2__leerMargenCreditoResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerMargenCreditoResponse(struct soap*, const char*, int, const struct ns2__leerMargenCreditoResponse *, const char*);
SOAP_FMAC3 struct ns2__leerMargenCreditoResponse * SOAP_FMAC4 soap_in_ns2__leerMargenCreditoResponse(struct soap*, const char*, struct ns2__leerMargenCreditoResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerMargenCreditoResponse(struct soap*, const struct ns2__leerMargenCreditoResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerMargenCreditoResponse
#define soap_write_ns2__leerMargenCreditoResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerMargenCreditoResponse(soap, data, "ns2:leerMargenCreditoResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerMargenCreditoResponse * SOAP_FMAC4 soap_get_ns2__leerMargenCreditoResponse(struct soap*, struct ns2__leerMargenCreditoResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerMargenCreditoResponse
#define soap_read_ns2__leerMargenCreditoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerMargenCreditoResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerMargenCreditoResponse * SOAP_FMAC2 soap_instantiate_ns2__leerMargenCreditoResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerMargenCreditoResponse * soap_new_ns2__leerMargenCreditoResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerMargenCreditoResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerMargenCreditoResponse * soap_new_req_ns2__leerMargenCreditoResponse(struct soap *soap) { struct ns2__leerMargenCreditoResponse *_p = soap_instantiate_ns2__leerMargenCreditoResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerMargenCreditoResponse * soap_new_set_ns2__leerMargenCreditoResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerMargenCreditoResponse *_p = soap_instantiate_ns2__leerMargenCreditoResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerMargenCreditoResponse(struct soap *soap, struct ns2__leerMargenCreditoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerMargenCreditoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerImporteCandidatosPrestamos
#define SOAP_TYPE_ns2__leerImporteCandidatosPrestamos (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerImporteCandidatosPrestamos(struct soap*, struct ns2__leerImporteCandidatosPrestamos *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerImporteCandidatosPrestamos(struct soap*, const struct ns2__leerImporteCandidatosPrestamos *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerImporteCandidatosPrestamos(struct soap*, const char*, int, const struct ns2__leerImporteCandidatosPrestamos *, const char*);
SOAP_FMAC3 struct ns2__leerImporteCandidatosPrestamos * SOAP_FMAC4 soap_in_ns2__leerImporteCandidatosPrestamos(struct soap*, const char*, struct ns2__leerImporteCandidatosPrestamos *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerImporteCandidatosPrestamos(struct soap*, const struct ns2__leerImporteCandidatosPrestamos *, const char*, const char*);

#ifndef soap_write_ns2__leerImporteCandidatosPrestamos
#define soap_write_ns2__leerImporteCandidatosPrestamos(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerImporteCandidatosPrestamos(soap, data, "ns2:leerImporteCandidatosPrestamos", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerImporteCandidatosPrestamos * SOAP_FMAC4 soap_get_ns2__leerImporteCandidatosPrestamos(struct soap*, struct ns2__leerImporteCandidatosPrestamos *, const char*, const char*);

#ifndef soap_read_ns2__leerImporteCandidatosPrestamos
#define soap_read_ns2__leerImporteCandidatosPrestamos(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerImporteCandidatosPrestamos(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerImporteCandidatosPrestamos * SOAP_FMAC2 soap_instantiate_ns2__leerImporteCandidatosPrestamos(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerImporteCandidatosPrestamos * soap_new_ns2__leerImporteCandidatosPrestamos(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerImporteCandidatosPrestamos(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerImporteCandidatosPrestamos * soap_new_req_ns2__leerImporteCandidatosPrestamos(struct soap *soap, int numerocliente, int Tienda, int ciudad) { struct ns2__leerImporteCandidatosPrestamos *_p = soap_instantiate_ns2__leerImporteCandidatosPrestamos(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Tienda = Tienda; _p->ciudad = ciudad; return _p; }

inline struct ns2__leerImporteCandidatosPrestamos * soap_new_set_ns2__leerImporteCandidatosPrestamos(struct soap *soap, int numerocliente, char *Fecha, int Tienda, int ciudad, char *cIpCartera) { struct ns2__leerImporteCandidatosPrestamos *_p = soap_instantiate_ns2__leerImporteCandidatosPrestamos(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->Tienda = Tienda; _p->ciudad = ciudad; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerImporteCandidatosPrestamos(struct soap *soap, struct ns2__leerImporteCandidatosPrestamos *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerImporteCandidatosPrestamos(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerImporteCandidatosPrestamosResponse
#define SOAP_TYPE_ns2__leerImporteCandidatosPrestamosResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerImporteCandidatosPrestamosResponse(struct soap*, struct ns2__leerImporteCandidatosPrestamosResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerImporteCandidatosPrestamosResponse(struct soap*, const struct ns2__leerImporteCandidatosPrestamosResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerImporteCandidatosPrestamosResponse(struct soap*, const char*, int, const struct ns2__leerImporteCandidatosPrestamosResponse *, const char*);
SOAP_FMAC3 struct ns2__leerImporteCandidatosPrestamosResponse * SOAP_FMAC4 soap_in_ns2__leerImporteCandidatosPrestamosResponse(struct soap*, const char*, struct ns2__leerImporteCandidatosPrestamosResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerImporteCandidatosPrestamosResponse(struct soap*, const struct ns2__leerImporteCandidatosPrestamosResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerImporteCandidatosPrestamosResponse
#define soap_write_ns2__leerImporteCandidatosPrestamosResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerImporteCandidatosPrestamosResponse(soap, data, "ns2:leerImporteCandidatosPrestamosResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerImporteCandidatosPrestamosResponse * SOAP_FMAC4 soap_get_ns2__leerImporteCandidatosPrestamosResponse(struct soap*, struct ns2__leerImporteCandidatosPrestamosResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerImporteCandidatosPrestamosResponse
#define soap_read_ns2__leerImporteCandidatosPrestamosResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerImporteCandidatosPrestamosResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerImporteCandidatosPrestamosResponse * SOAP_FMAC2 soap_instantiate_ns2__leerImporteCandidatosPrestamosResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerImporteCandidatosPrestamosResponse * soap_new_ns2__leerImporteCandidatosPrestamosResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerImporteCandidatosPrestamosResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerImporteCandidatosPrestamosResponse * soap_new_req_ns2__leerImporteCandidatosPrestamosResponse(struct soap *soap) { struct ns2__leerImporteCandidatosPrestamosResponse *_p = soap_instantiate_ns2__leerImporteCandidatosPrestamosResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerImporteCandidatosPrestamosResponse * soap_new_set_ns2__leerImporteCandidatosPrestamosResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerImporteCandidatosPrestamosResponse *_p = soap_instantiate_ns2__leerImporteCandidatosPrestamosResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerImporteCandidatosPrestamosResponse(struct soap *soap, struct ns2__leerImporteCandidatosPrestamosResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerImporteCandidatosPrestamosResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerImportesTotalesCliente
#define SOAP_TYPE_ns2__leerImportesTotalesCliente (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerImportesTotalesCliente(struct soap*, struct ns2__leerImportesTotalesCliente *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerImportesTotalesCliente(struct soap*, const struct ns2__leerImportesTotalesCliente *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerImportesTotalesCliente(struct soap*, const char*, int, const struct ns2__leerImportesTotalesCliente *, const char*);
SOAP_FMAC3 struct ns2__leerImportesTotalesCliente * SOAP_FMAC4 soap_in_ns2__leerImportesTotalesCliente(struct soap*, const char*, struct ns2__leerImportesTotalesCliente *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerImportesTotalesCliente(struct soap*, const struct ns2__leerImportesTotalesCliente *, const char*, const char*);

#ifndef soap_write_ns2__leerImportesTotalesCliente
#define soap_write_ns2__leerImportesTotalesCliente(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerImportesTotalesCliente(soap, data, "ns2:leerImportesTotalesCliente", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerImportesTotalesCliente * SOAP_FMAC4 soap_get_ns2__leerImportesTotalesCliente(struct soap*, struct ns2__leerImportesTotalesCliente *, const char*, const char*);

#ifndef soap_read_ns2__leerImportesTotalesCliente
#define soap_read_ns2__leerImportesTotalesCliente(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerImportesTotalesCliente(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerImportesTotalesCliente * SOAP_FMAC2 soap_instantiate_ns2__leerImportesTotalesCliente(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerImportesTotalesCliente * soap_new_ns2__leerImportesTotalesCliente(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerImportesTotalesCliente(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerImportesTotalesCliente * soap_new_req_ns2__leerImportesTotalesCliente(struct soap *soap, int numerocliente) { struct ns2__leerImportesTotalesCliente *_p = soap_instantiate_ns2__leerImportesTotalesCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerImportesTotalesCliente * soap_new_set_ns2__leerImportesTotalesCliente(struct soap *soap, int numerocliente, char *Fecha, char *cIpCartera) { struct ns2__leerImportesTotalesCliente *_p = soap_instantiate_ns2__leerImportesTotalesCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerImportesTotalesCliente(struct soap *soap, struct ns2__leerImportesTotalesCliente *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerImportesTotalesCliente(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerImportesTotalesClienteResponse
#define SOAP_TYPE_ns2__leerImportesTotalesClienteResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerImportesTotalesClienteResponse(struct soap*, struct ns2__leerImportesTotalesClienteResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerImportesTotalesClienteResponse(struct soap*, const struct ns2__leerImportesTotalesClienteResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerImportesTotalesClienteResponse(struct soap*, const char*, int, const struct ns2__leerImportesTotalesClienteResponse *, const char*);
SOAP_FMAC3 struct ns2__leerImportesTotalesClienteResponse * SOAP_FMAC4 soap_in_ns2__leerImportesTotalesClienteResponse(struct soap*, const char*, struct ns2__leerImportesTotalesClienteResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerImportesTotalesClienteResponse(struct soap*, const struct ns2__leerImportesTotalesClienteResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerImportesTotalesClienteResponse
#define soap_write_ns2__leerImportesTotalesClienteResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerImportesTotalesClienteResponse(soap, data, "ns2:leerImportesTotalesClienteResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerImportesTotalesClienteResponse * SOAP_FMAC4 soap_get_ns2__leerImportesTotalesClienteResponse(struct soap*, struct ns2__leerImportesTotalesClienteResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerImportesTotalesClienteResponse
#define soap_read_ns2__leerImportesTotalesClienteResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerImportesTotalesClienteResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerImportesTotalesClienteResponse * SOAP_FMAC2 soap_instantiate_ns2__leerImportesTotalesClienteResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerImportesTotalesClienteResponse * soap_new_ns2__leerImportesTotalesClienteResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerImportesTotalesClienteResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerImportesTotalesClienteResponse * soap_new_req_ns2__leerImportesTotalesClienteResponse(struct soap *soap) { struct ns2__leerImportesTotalesClienteResponse *_p = soap_instantiate_ns2__leerImportesTotalesClienteResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerImportesTotalesClienteResponse * soap_new_set_ns2__leerImportesTotalesClienteResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerImportesTotalesClienteResponse *_p = soap_instantiate_ns2__leerImportesTotalesClienteResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerImportesTotalesClienteResponse(struct soap *soap, struct ns2__leerImportesTotalesClienteResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerImportesTotalesClienteResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCuentaCliente
#define SOAP_TYPE_ns2__leerCuentaCliente (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCuentaCliente(struct soap*, struct ns2__leerCuentaCliente *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCuentaCliente(struct soap*, const struct ns2__leerCuentaCliente *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCuentaCliente(struct soap*, const char*, int, const struct ns2__leerCuentaCliente *, const char*);
SOAP_FMAC3 struct ns2__leerCuentaCliente * SOAP_FMAC4 soap_in_ns2__leerCuentaCliente(struct soap*, const char*, struct ns2__leerCuentaCliente *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCuentaCliente(struct soap*, const struct ns2__leerCuentaCliente *, const char*, const char*);

#ifndef soap_write_ns2__leerCuentaCliente
#define soap_write_ns2__leerCuentaCliente(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCuentaCliente(soap, data, "ns2:leerCuentaCliente", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCuentaCliente * SOAP_FMAC4 soap_get_ns2__leerCuentaCliente(struct soap*, struct ns2__leerCuentaCliente *, const char*, const char*);

#ifndef soap_read_ns2__leerCuentaCliente
#define soap_read_ns2__leerCuentaCliente(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCuentaCliente(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCuentaCliente * SOAP_FMAC2 soap_instantiate_ns2__leerCuentaCliente(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCuentaCliente * soap_new_ns2__leerCuentaCliente(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCuentaCliente(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCuentaCliente * soap_new_req_ns2__leerCuentaCliente(struct soap *soap, int numerocliente) { struct ns2__leerCuentaCliente *_p = soap_instantiate_ns2__leerCuentaCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerCuentaCliente * soap_new_set_ns2__leerCuentaCliente(struct soap *soap, int numerocliente, char *Fecha, char *tipoconsulta, char *cIpCartera) { struct ns2__leerCuentaCliente *_p = soap_instantiate_ns2__leerCuentaCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->tipoconsulta = tipoconsulta; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerCuentaCliente(struct soap *soap, struct ns2__leerCuentaCliente *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCuentaCliente(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCuentaClienteResponse
#define SOAP_TYPE_ns2__leerCuentaClienteResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCuentaClienteResponse(struct soap*, struct ns2__leerCuentaClienteResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCuentaClienteResponse(struct soap*, const struct ns2__leerCuentaClienteResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCuentaClienteResponse(struct soap*, const char*, int, const struct ns2__leerCuentaClienteResponse *, const char*);
SOAP_FMAC3 struct ns2__leerCuentaClienteResponse * SOAP_FMAC4 soap_in_ns2__leerCuentaClienteResponse(struct soap*, const char*, struct ns2__leerCuentaClienteResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCuentaClienteResponse(struct soap*, const struct ns2__leerCuentaClienteResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerCuentaClienteResponse
#define soap_write_ns2__leerCuentaClienteResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCuentaClienteResponse(soap, data, "ns2:leerCuentaClienteResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCuentaClienteResponse * SOAP_FMAC4 soap_get_ns2__leerCuentaClienteResponse(struct soap*, struct ns2__leerCuentaClienteResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerCuentaClienteResponse
#define soap_read_ns2__leerCuentaClienteResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCuentaClienteResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCuentaClienteResponse * SOAP_FMAC2 soap_instantiate_ns2__leerCuentaClienteResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCuentaClienteResponse * soap_new_ns2__leerCuentaClienteResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCuentaClienteResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCuentaClienteResponse * soap_new_req_ns2__leerCuentaClienteResponse(struct soap *soap) { struct ns2__leerCuentaClienteResponse *_p = soap_instantiate_ns2__leerCuentaClienteResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerCuentaClienteResponse * soap_new_set_ns2__leerCuentaClienteResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerCuentaClienteResponse *_p = soap_instantiate_ns2__leerCuentaClienteResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerCuentaClienteResponse(struct soap *soap, struct ns2__leerCuentaClienteResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCuentaClienteResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCuentasCliente
#define SOAP_TYPE_ns2__leerCuentasCliente (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCuentasCliente(struct soap*, struct ns2__leerCuentasCliente *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCuentasCliente(struct soap*, const struct ns2__leerCuentasCliente *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCuentasCliente(struct soap*, const char*, int, const struct ns2__leerCuentasCliente *, const char*);
SOAP_FMAC3 struct ns2__leerCuentasCliente * SOAP_FMAC4 soap_in_ns2__leerCuentasCliente(struct soap*, const char*, struct ns2__leerCuentasCliente *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCuentasCliente(struct soap*, const struct ns2__leerCuentasCliente *, const char*, const char*);

#ifndef soap_write_ns2__leerCuentasCliente
#define soap_write_ns2__leerCuentasCliente(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCuentasCliente(soap, data, "ns2:leerCuentasCliente", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCuentasCliente * SOAP_FMAC4 soap_get_ns2__leerCuentasCliente(struct soap*, struct ns2__leerCuentasCliente *, const char*, const char*);

#ifndef soap_read_ns2__leerCuentasCliente
#define soap_read_ns2__leerCuentasCliente(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCuentasCliente(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCuentasCliente * SOAP_FMAC2 soap_instantiate_ns2__leerCuentasCliente(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCuentasCliente * soap_new_ns2__leerCuentasCliente(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCuentasCliente(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCuentasCliente * soap_new_req_ns2__leerCuentasCliente(struct soap *soap, int numerocliente) { struct ns2__leerCuentasCliente *_p = soap_instantiate_ns2__leerCuentasCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerCuentasCliente * soap_new_set_ns2__leerCuentasCliente(struct soap *soap, int numerocliente, char *Fecha, char *cIpCartera) { struct ns2__leerCuentasCliente *_p = soap_instantiate_ns2__leerCuentasCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->Fecha = Fecha; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerCuentasCliente(struct soap *soap, struct ns2__leerCuentasCliente *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCuentasCliente(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerCuentasClienteResponse
#define SOAP_TYPE_ns2__leerCuentasClienteResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerCuentasClienteResponse(struct soap*, struct ns2__leerCuentasClienteResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerCuentasClienteResponse(struct soap*, const struct ns2__leerCuentasClienteResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerCuentasClienteResponse(struct soap*, const char*, int, const struct ns2__leerCuentasClienteResponse *, const char*);
SOAP_FMAC3 struct ns2__leerCuentasClienteResponse * SOAP_FMAC4 soap_in_ns2__leerCuentasClienteResponse(struct soap*, const char*, struct ns2__leerCuentasClienteResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerCuentasClienteResponse(struct soap*, const struct ns2__leerCuentasClienteResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerCuentasClienteResponse
#define soap_write_ns2__leerCuentasClienteResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerCuentasClienteResponse(soap, data, "ns2:leerCuentasClienteResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerCuentasClienteResponse * SOAP_FMAC4 soap_get_ns2__leerCuentasClienteResponse(struct soap*, struct ns2__leerCuentasClienteResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerCuentasClienteResponse
#define soap_read_ns2__leerCuentasClienteResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerCuentasClienteResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerCuentasClienteResponse * SOAP_FMAC2 soap_instantiate_ns2__leerCuentasClienteResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerCuentasClienteResponse * soap_new_ns2__leerCuentasClienteResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerCuentasClienteResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerCuentasClienteResponse * soap_new_req_ns2__leerCuentasClienteResponse(struct soap *soap) { struct ns2__leerCuentasClienteResponse *_p = soap_instantiate_ns2__leerCuentasClienteResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerCuentasClienteResponse * soap_new_set_ns2__leerCuentasClienteResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerCuentasClienteResponse *_p = soap_instantiate_ns2__leerCuentasClienteResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerCuentasClienteResponse(struct soap *soap, struct ns2__leerCuentasClienteResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerCuentasClienteResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerDomicilioCliente
#define SOAP_TYPE_ns2__leerDomicilioCliente (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerDomicilioCliente(struct soap*, struct ns2__leerDomicilioCliente *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerDomicilioCliente(struct soap*, const struct ns2__leerDomicilioCliente *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerDomicilioCliente(struct soap*, const char*, int, const struct ns2__leerDomicilioCliente *, const char*);
SOAP_FMAC3 struct ns2__leerDomicilioCliente * SOAP_FMAC4 soap_in_ns2__leerDomicilioCliente(struct soap*, const char*, struct ns2__leerDomicilioCliente *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerDomicilioCliente(struct soap*, const struct ns2__leerDomicilioCliente *, const char*, const char*);

#ifndef soap_write_ns2__leerDomicilioCliente
#define soap_write_ns2__leerDomicilioCliente(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerDomicilioCliente(soap, data, "ns2:leerDomicilioCliente", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerDomicilioCliente * SOAP_FMAC4 soap_get_ns2__leerDomicilioCliente(struct soap*, struct ns2__leerDomicilioCliente *, const char*, const char*);

#ifndef soap_read_ns2__leerDomicilioCliente
#define soap_read_ns2__leerDomicilioCliente(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerDomicilioCliente(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerDomicilioCliente * SOAP_FMAC2 soap_instantiate_ns2__leerDomicilioCliente(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerDomicilioCliente * soap_new_ns2__leerDomicilioCliente(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerDomicilioCliente(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerDomicilioCliente * soap_new_req_ns2__leerDomicilioCliente(struct soap *soap, int numerocliente) { struct ns2__leerDomicilioCliente *_p = soap_instantiate_ns2__leerDomicilioCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerDomicilioCliente * soap_new_set_ns2__leerDomicilioCliente(struct soap *soap, int numerocliente, char *cIpCartera) { struct ns2__leerDomicilioCliente *_p = soap_instantiate_ns2__leerDomicilioCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerDomicilioCliente(struct soap *soap, struct ns2__leerDomicilioCliente *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerDomicilioCliente(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerDomicilioClienteResponse
#define SOAP_TYPE_ns2__leerDomicilioClienteResponse (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerDomicilioClienteResponse(struct soap*, struct ns2__leerDomicilioClienteResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerDomicilioClienteResponse(struct soap*, const struct ns2__leerDomicilioClienteResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerDomicilioClienteResponse(struct soap*, const char*, int, const struct ns2__leerDomicilioClienteResponse *, const char*);
SOAP_FMAC3 struct ns2__leerDomicilioClienteResponse * SOAP_FMAC4 soap_in_ns2__leerDomicilioClienteResponse(struct soap*, const char*, struct ns2__leerDomicilioClienteResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerDomicilioClienteResponse(struct soap*, const struct ns2__leerDomicilioClienteResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerDomicilioClienteResponse
#define soap_write_ns2__leerDomicilioClienteResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerDomicilioClienteResponse(soap, data, "ns2:leerDomicilioClienteResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerDomicilioClienteResponse * SOAP_FMAC4 soap_get_ns2__leerDomicilioClienteResponse(struct soap*, struct ns2__leerDomicilioClienteResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerDomicilioClienteResponse
#define soap_read_ns2__leerDomicilioClienteResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerDomicilioClienteResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerDomicilioClienteResponse * SOAP_FMAC2 soap_instantiate_ns2__leerDomicilioClienteResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerDomicilioClienteResponse * soap_new_ns2__leerDomicilioClienteResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerDomicilioClienteResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerDomicilioClienteResponse * soap_new_req_ns2__leerDomicilioClienteResponse(struct soap *soap) { struct ns2__leerDomicilioClienteResponse *_p = soap_instantiate_ns2__leerDomicilioClienteResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerDomicilioClienteResponse * soap_new_set_ns2__leerDomicilioClienteResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerDomicilioClienteResponse *_p = soap_instantiate_ns2__leerDomicilioClienteResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerDomicilioClienteResponse(struct soap *soap, struct ns2__leerDomicilioClienteResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerDomicilioClienteResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerDatosCliente
#define SOAP_TYPE_ns2__leerDatosCliente (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerDatosCliente(struct soap*, struct ns2__leerDatosCliente *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerDatosCliente(struct soap*, const struct ns2__leerDatosCliente *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerDatosCliente(struct soap*, const char*, int, const struct ns2__leerDatosCliente *, const char*);
SOAP_FMAC3 struct ns2__leerDatosCliente * SOAP_FMAC4 soap_in_ns2__leerDatosCliente(struct soap*, const char*, struct ns2__leerDatosCliente *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerDatosCliente(struct soap*, const struct ns2__leerDatosCliente *, const char*, const char*);

#ifndef soap_write_ns2__leerDatosCliente
#define soap_write_ns2__leerDatosCliente(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerDatosCliente(soap, data, "ns2:leerDatosCliente", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerDatosCliente * SOAP_FMAC4 soap_get_ns2__leerDatosCliente(struct soap*, struct ns2__leerDatosCliente *, const char*, const char*);

#ifndef soap_read_ns2__leerDatosCliente
#define soap_read_ns2__leerDatosCliente(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerDatosCliente(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerDatosCliente * SOAP_FMAC2 soap_instantiate_ns2__leerDatosCliente(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerDatosCliente * soap_new_ns2__leerDatosCliente(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerDatosCliente(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerDatosCliente * soap_new_req_ns2__leerDatosCliente(struct soap *soap, int numerocliente) { struct ns2__leerDatosCliente *_p = soap_instantiate_ns2__leerDatosCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerDatosCliente * soap_new_set_ns2__leerDatosCliente(struct soap *soap, int numerocliente, char *tipoconsulta, char *cIpCartera) { struct ns2__leerDatosCliente *_p = soap_instantiate_ns2__leerDatosCliente(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->tipoconsulta = tipoconsulta; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerDatosCliente(struct soap *soap, struct ns2__leerDatosCliente *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerDatosCliente(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerDatosClienteResponse
#define SOAP_TYPE_ns2__leerDatosClienteResponse (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerDatosClienteResponse(struct soap*, struct ns2__leerDatosClienteResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerDatosClienteResponse(struct soap*, const struct ns2__leerDatosClienteResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerDatosClienteResponse(struct soap*, const char*, int, const struct ns2__leerDatosClienteResponse *, const char*);
SOAP_FMAC3 struct ns2__leerDatosClienteResponse * SOAP_FMAC4 soap_in_ns2__leerDatosClienteResponse(struct soap*, const char*, struct ns2__leerDatosClienteResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerDatosClienteResponse(struct soap*, const struct ns2__leerDatosClienteResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerDatosClienteResponse
#define soap_write_ns2__leerDatosClienteResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerDatosClienteResponse(soap, data, "ns2:leerDatosClienteResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerDatosClienteResponse * SOAP_FMAC4 soap_get_ns2__leerDatosClienteResponse(struct soap*, struct ns2__leerDatosClienteResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerDatosClienteResponse
#define soap_read_ns2__leerDatosClienteResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerDatosClienteResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerDatosClienteResponse * SOAP_FMAC2 soap_instantiate_ns2__leerDatosClienteResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerDatosClienteResponse * soap_new_ns2__leerDatosClienteResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerDatosClienteResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerDatosClienteResponse * soap_new_req_ns2__leerDatosClienteResponse(struct soap *soap) { struct ns2__leerDatosClienteResponse *_p = soap_instantiate_ns2__leerDatosClienteResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerDatosClienteResponse * soap_new_set_ns2__leerDatosClienteResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerDatosClienteResponse *_p = soap_instantiate_ns2__leerDatosClienteResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerDatosClienteResponse(struct soap *soap, struct ns2__leerDatosClienteResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerDatosClienteResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerClienteCoppel
#define SOAP_TYPE_ns2__leerClienteCoppel (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerClienteCoppel(struct soap*, struct ns2__leerClienteCoppel *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerClienteCoppel(struct soap*, const struct ns2__leerClienteCoppel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerClienteCoppel(struct soap*, const char*, int, const struct ns2__leerClienteCoppel *, const char*);
SOAP_FMAC3 struct ns2__leerClienteCoppel * SOAP_FMAC4 soap_in_ns2__leerClienteCoppel(struct soap*, const char*, struct ns2__leerClienteCoppel *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerClienteCoppel(struct soap*, const struct ns2__leerClienteCoppel *, const char*, const char*);

#ifndef soap_write_ns2__leerClienteCoppel
#define soap_write_ns2__leerClienteCoppel(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerClienteCoppel(soap, data, "ns2:leerClienteCoppel", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerClienteCoppel * SOAP_FMAC4 soap_get_ns2__leerClienteCoppel(struct soap*, struct ns2__leerClienteCoppel *, const char*, const char*);

#ifndef soap_read_ns2__leerClienteCoppel
#define soap_read_ns2__leerClienteCoppel(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerClienteCoppel(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerClienteCoppel * SOAP_FMAC2 soap_instantiate_ns2__leerClienteCoppel(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerClienteCoppel * soap_new_ns2__leerClienteCoppel(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerClienteCoppel(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerClienteCoppel * soap_new_req_ns2__leerClienteCoppel(struct soap *soap, int numerocliente) { struct ns2__leerClienteCoppel *_p = soap_instantiate_ns2__leerClienteCoppel(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; return _p; }

inline struct ns2__leerClienteCoppel * soap_new_set_ns2__leerClienteCoppel(struct soap *soap, int numerocliente, char *cIpCartera) { struct ns2__leerClienteCoppel *_p = soap_instantiate_ns2__leerClienteCoppel(soap, -1, NULL, NULL, NULL); _p->numerocliente = numerocliente; _p->cIpCartera = cIpCartera; return _p; }

inline void soap_delete_ns2__leerClienteCoppel(struct soap *soap, struct ns2__leerClienteCoppel *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerClienteCoppel(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__leerClienteCoppelResponse
#define SOAP_TYPE_ns2__leerClienteCoppelResponse (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__leerClienteCoppelResponse(struct soap*, struct ns2__leerClienteCoppelResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__leerClienteCoppelResponse(struct soap*, const struct ns2__leerClienteCoppelResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__leerClienteCoppelResponse(struct soap*, const char*, int, const struct ns2__leerClienteCoppelResponse *, const char*);
SOAP_FMAC3 struct ns2__leerClienteCoppelResponse * SOAP_FMAC4 soap_in_ns2__leerClienteCoppelResponse(struct soap*, const char*, struct ns2__leerClienteCoppelResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__leerClienteCoppelResponse(struct soap*, const struct ns2__leerClienteCoppelResponse *, const char*, const char*);

#ifndef soap_write_ns2__leerClienteCoppelResponse
#define soap_write_ns2__leerClienteCoppelResponse(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_ns2__leerClienteCoppelResponse(soap, data, "ns2:leerClienteCoppelResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct ns2__leerClienteCoppelResponse * SOAP_FMAC4 soap_get_ns2__leerClienteCoppelResponse(struct soap*, struct ns2__leerClienteCoppelResponse *, const char*, const char*);

#ifndef soap_read_ns2__leerClienteCoppelResponse
#define soap_read_ns2__leerClienteCoppelResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__leerClienteCoppelResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC1 struct ns2__leerClienteCoppelResponse * SOAP_FMAC2 soap_instantiate_ns2__leerClienteCoppelResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__leerClienteCoppelResponse * soap_new_ns2__leerClienteCoppelResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__leerClienteCoppelResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__leerClienteCoppelResponse * soap_new_req_ns2__leerClienteCoppelResponse(struct soap *soap) { struct ns2__leerClienteCoppelResponse *_p = soap_instantiate_ns2__leerClienteCoppelResponse(soap, -1, NULL, NULL, NULL); return _p; }

inline struct ns2__leerClienteCoppelResponse * soap_new_set_ns2__leerClienteCoppelResponse(struct soap *soap, ns2__DatoXml *datos) { struct ns2__leerClienteCoppelResponse *_p = soap_instantiate_ns2__leerClienteCoppelResponse(soap, -1, NULL, NULL, NULL); _p->datos = datos; return _p; }

inline void soap_delete_ns2__leerClienteCoppelResponse(struct soap *soap, struct ns2__leerClienteCoppelResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__leerClienteCoppelResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#endif

#ifndef SOAP_TYPE_PointerTons2__DatoXml
#define SOAP_TYPE_PointerTons2__DatoXml (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__DatoXml(struct soap*, ns2__DatoXml *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__DatoXml(struct soap*, const char *, int, ns2__DatoXml *const*, const char *);
SOAP_FMAC3 ns2__DatoXml ** SOAP_FMAC4 soap_in_PointerTons2__DatoXml(struct soap*, const char*, ns2__DatoXml **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__DatoXml(struct soap*, ns2__DatoXml *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__DatoXml
#define soap_write_PointerTons2__DatoXml(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_PointerTons2__DatoXml(soap, data, "ns2:DatoXml", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 ns2__DatoXml ** SOAP_FMAC4 soap_get_PointerTons2__DatoXml(struct soap*, ns2__DatoXml **, const char*, const char*);

#ifndef soap_read_PointerTons2__DatoXml
#define soap_read_PointerTons2__DatoXml(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__DatoXml(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_set_omode(soap, SOAP_XML_TREE), soap_begin(soap), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#endif

/* End of soapH.h */
